#ifndef __Ax_Mail_MsgCache_H__
#define __Ax_Mail_MsgCache_H__
//=============================================================================
/*
 * See the file README in the main directory for a description of
 * this software, copyright information, and how to reach the author.
 *
 * Author: alex
 * Date:   16.04.2006
 *
 * Last modfied:
 *   $Author: alex $
 *   $Date: 2013-03-20 19:53:42 +0100 (Mi, 20 MÃ¤r 2013) $
 */
//=============================================================================

//=============================================================================
//     includes
//=============================================================================

//----- qt --------------------------------------------------------------------
//----- CORBA -----------------------------------------------------------------
//----- ICE -------------------------------------------------------------------
//----- C++ -------------------------------------------------------------------
//----- C ---------------------------------------------------------------------
//----- AxLib -----------------------------------------------------------------
//----- vdr -------------------------------------------------------------------
//----- local -----------------------------------------------------------------
#include "c-client-header.h"

//=============================================================================
//     namespaces
//=============================================================================
namespace Ax   {
namespace Mail {

//=============================================================================
//     class MsgCache
//=============================================================================
/** kind of 'smart pointer' for the MESSAGECACHE-structure of c-client.
 */
class MsgCache
{
  public:
    //-------------------------------------------------------------------------
    //     MsgCache()
    //-------------------------------------------------------------------------
    /** store a pointer and increment lockcounter of internal internal
     *  elt/MESSAGECACHE
     */
    MsgCache(MESSAGECACHE *theMsgCache);

    //-------------------------------------------------------------------------
    //     ~MsgCache()
    //-------------------------------------------------------------------------
    /** free internal elt/MESSAGECACHE
     */
    ~MsgCache();

    //-------------------------------------------------------------------------
    //     MsgCache()
    //-------------------------------------------------------------------------
    /** copy constructor
     */
    MsgCache(const MsgCache &that);

    //-------------------------------------------------------------------------
    //     operator=()
    //-------------------------------------------------------------------------
    /** assignment operator
     */
    MsgCache &operator=(const MsgCache &that);

    //-------------------------------------------------------------------------
    //     isNull()
    //-------------------------------------------------------------------------
    bool isNull() const { return myMsgCache == 0; }

    //-------------------------------------------------------------------------
    //     operator *()
    //-------------------------------------------------------------------------
    /** Returns a pointer to the internal elt/MESSAGECACHE
     */
    MESSAGECACHE *operator *() const { return myMsgCache; }

    //-------------------------------------------------------------------------
    //     operator ->()
    //-------------------------------------------------------------------------
    /** Returns a pointer to the internal elt/MESSAGECACHE
     *
     * allows direct access to members of myMsgCache
     */
    MESSAGECACHE *operator ->() const { return myMsgCache; }

    //-----------------------------------------------------------------------
    //     dump()
    //-----------------------------------------------------------------------
    /** Dump internal information to syslog
     */
    void dump() const;

  private:
    //-------------------------------------------------------------------------
    //     attributes
    //-------------------------------------------------------------------------
    MESSAGECACHE *myMsgCache;

}; // class MsgCache

//=============================================================================
//     namespaces
//=============================================================================
} // Mail
} // Ax

#endif

