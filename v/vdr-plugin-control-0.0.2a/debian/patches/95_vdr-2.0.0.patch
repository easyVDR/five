#!/bin/sh /usr/share/dpatch/dpatch-run

## control-1.3.18 patch - by Thomas GÃ¼nther <tom@toms-cafe.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Changes for VDR >= 1.3.18.

@DPATCH@
--- a/state.c
+++ b/state.c
@@ -61,7 +61,7 @@
 // Indicates a channel switch on the given DVB device.
 // If ChannelNumber is 0, this is before the channel is being switched,
 // otherwise ChannelNumber is the number of the channel that has been switched to.
-void cCtrlState::ChannelSwitch(const cDevice *Device, int ChannelNumber) {
+void cCtrlState::ChannelSwitch(const cDevice *Device, int ChannelNumber, bool LiveView) {
 }
 
 
@@ -69,7 +69,7 @@
 // The given DVB device has started recording Name. Name is the name of the
 // recording, without any directory path.
 // If Name is NULL, the recording has ended.
-void cCtrlState::Recording(const cDevice *Device, const char *Name) {
+void cCtrlState::Recording(const cDevice *Device, const char *Name, const char *Filename, bool On) {
 //printf("Recording %i, %s", Device->CardIndex(), Name );
 }
 
@@ -79,7 +79,7 @@
 // recording, without any directory path. In case of a player that can't provide
 // a name, Name can be a string that identifies the player type (like, e.g., "DVD").
 // If Name is NULL, the replay has ended.
-void cCtrlState::Replaying(const cControl *Control, const char *Name) {
+void cCtrlState::Replaying(const cControl *Control, const char *Name, const char *Filename, bool On) {
 //printf("Replaying %s", Name );
 }
 
--- a/state.h
+++ b/state.h
@@ -59,9 +59,9 @@
 
 // cStatus
 protected:
-  virtual void ChannelSwitch(const cDevice *Device, int ChannelNumber);
-  virtual void Recording(const cDevice *Device, const char *Name);
-  virtual void Replaying(const cControl *Control, const char *Name);
+  virtual void ChannelSwitch(const cDevice *Device, int ChannelNumber, bool LiveView);
+  virtual void Recording(const cDevice *Device, const char *Name, const char *Filename, bool On);
+  virtual void Replaying(const cControl *Control, const char *Name, const char *Filename, bool On);
   virtual void SetVolume(int Volume, bool Absolute);
   virtual void OsdClear();
   virtual void OsdTitle(const char *Title);

