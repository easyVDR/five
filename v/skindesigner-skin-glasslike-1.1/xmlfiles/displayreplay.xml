<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE displayreplay SYSTEM "../../../dtd/displayreplay.dtd">

<displayreplay x="0" y="0" width="100%" height="100%" fadetime="{mainmenuFadeTime}" shifttime="0" shifttype="bottom" shiftmode="slowed">

    <background>
	<area background="true" x="0" y="{areaheight}*0.59" width="{areawidth}" height="{areaheight}*0.41"  layer="1">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="skinpart" path="displaychannelback" />
	</area>
    	<!-- progressbar back -->
        <area background="true" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="1">
            <drawellipse x="0" y="0" width="{areaheight}" height="{areaheight}" color="{clrChannelProgressbarBg}" quadrant="0" />
            <drawellipse x="{areawidth}-{areaheight}" y="0" width="{areaheight}" height="{areaheight}" color="{clrChannelProgressbarBg}" quadrant="0" />
            <drawrectangle x="{areaheight}/2" y="0" width="{areawidth} - {areaheight}" height="{areaheight}" color="{clrChannelProgressbarBg}" />
	</area>
    </background>
 
    <backgroundmodeonly>
        <area x="40%" y="86%" width="20%" height="11%" layer="3">
            <fill color="{clrBorder}" />
            <drawrectangle x="1" y="1" width="{areawidth} -2" height="{areaheight} -2" color="{clrTransBlack}" />
        </area>
    </backgroundmodeonly>

    <!-- Available Variables datetime:
    {time}                              time in hh:mm
    {day}                               day in digits
    {dayleadingzero}                    day in digits with leading 0
    {dayname}                           Full name of the day
    {daynameshort}                      Short 3 char name of the day
    {month}                             month in digits with leading 0
    {monthname}                         Full name of the month
    {monthnameshort}                    3 letter abbrivation of month name
    {year}                              year in yyyy
    -->
    <datetime>
        <area condition="{replayWidgetClock}" x="{areawidth}*0.20" y="{areaheight}*0.61" width="{areawidth}*0.60" height="{areaheight}*0.04" layer="2">
	    <drawtext align="center" valign="center" width="{areawidth}" font="{regular}" fontsize="{areaheight}" color="{clrFontWidgetBright}" text="{dayname}  {dayleadingzero}.{month}.{year}  {time}" />
	</area>
    </datetime>

    <!-- Available Variables scrapercontent:
    {posterpath}                        Full Path of Poster to use in image path attribute
    {posterwidth}                       width of poster in pixel
    {posterheight}                      height of poster in pixel
    {hasPoster}                         true if poster is available
    {bannerpath}                        Full Path of banner to use in image path attribute
    {bannerwidth}                       width of banner in pixel
    {bannerheight}                      height of banner in pixel
    {hasBanner}                         true if banner is available

    Use this tokens if you want to display a banner for series and a poster for movies:
    {mediapath}                         Full Path of Poster or Banner to use in image path attribute
    {mediawidth}                        width of image in pixel
    {mediaheight}                       height of image in pixel
    {isbanner}                          true if image is a banner, false if it is a poster
    -->
    <scrapercontent detached="true" fadetime="0" delay="50">
        <area condition="{replayWidgetBanner}++{hasbanner}" x="{areawidth}*0.01" y="1%" width="{areaheight}*0.14*{mediawidth}/{mediaheight}" height="14%" layer="2">
            <drawimage name="bannerback" imagetype="skinpart" path="banner_back" align="center" valign="center"  width="{areawidth}" height="{areaheight}"/>
        </area>
        <area condition="{replayWidgetBanner}++{hasbanner}" x="{areawidth}*0.02" y="{areaheight}*0.01 + {areaheight}*0.01" width="{areaheight}*0.14*{mediawidth}/{mediaheight} - {areawidth}*0.02" height="{areaheight}*0.14 - {areaheight}*0.02" layer="3">
            <drawimage imagetype="image" path="{mediapath}" align="center" valign="center"  width="{areawidth}" height="{areaheight}"/>
        </area>
        <area condition="{replayWidgetPoster}++{hasposter}" x="{areawidth} -{areaheight}*0.5*{posterwidth}/{posterheight}" y="1%" width="{areaheight}*0.5*{posterwidth}/{posterheight}" height="50%" layer="2">
            <drawimage name="poster" imagetype="image" path="{posterpath}" x="0" y="0" align="center" valign="center" width="{areaheight} * 0.83  * {posterwidth} / {posterheight}" height="{areaheight} * 0.83"/>
        </area>
        <area condition="{replayWidgetPoster}++{hasposter}" x="{areawidth}-{areaheight}*0.5*{posterwidth}/{posterheight}" y="1%" width="{areaheight}*0.5*{posterwidth}/{posterheight}" height="50%" layer="3">
            <drawimage imagetype="skinpart" path="poster_top" x="0" y="0" valign="top" align="center" width="{areaheight} * 0.88  * {posterwidth} / {posterheight}" height="{areaheight} * 0.95" />
        </area>
    </scrapercontent>

    <!-- Available Variables rectitle:
    {rectitle}                     Title of Recording
    {recsubtitle}                  Subtitle of the Recording
    {recdate}                      Date Recording in dd.mm.yy
    {rectime}                      Time of Recording in hh:mm
    -->
    <rectitle>
        <area x="{areawidth}*0.03" y="{areaheight}*0.65" width="{areawidth}*0.94" height="{areaheight}*0.15" layer="2">
            <drawtext name="title" align="center" y="0" font="{regular}" fontsize="55%" color="{clrFontTitle}" width="100%" text="{rectitle}" />
            <drawtext condition="isset{recsubtitle}" align="center" y="{height(title)}" font="{regular}" fontsize="35%" color="{clrFontSubtitle}" width="100%" text="{recsubtitle}" />
        </area>
        <area x="{areawidth}*0.72" y="{areaheight}*0.87" width="{areawidth}*0.45" height="{areaheight}*0.07" layer="2">
            <drawtext align="left" y="0" font="{regular}" fontsize="48%" color="{clrFontTitle}" width="100%" text="{tr(Recordedat)} {recdate} {rectime}" />
        </area>
    </rectitle>

    <!-- Available Variables recinfo:
    {screenwidth}                      width of currently displayed recording in px
    {screenheight}                     height of currently displayed recording in px
    {resolution}                       resolution: hd1080i, hd720p, sd576i
    {aspect}                           screen aspect, each 4:3, 16:9 or 21:9
    {isHD}                             true for hd1080i and hd720p
    {isWideScreen}                     true if aspect is 16:9 or 21:9
    -->
    <recinfo>
	<area condition="strnotequal({resolution}, 'hd1080i')" x="{areawidth}*0.28" y="{areaheight}*0.951" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="1080" />
	</area>
	<area condition="strequal({resolution}, 'hd1080i')" x="{areawidth}*0.28" y="{areaheight}*0.951" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="1080" />
	</area>

	<area condition="strnotequal({resolution}, 'hd720p')" x="{areawidth}*0.33" y="{areaheight}*0.954" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="720" />
	</area>
	<area condition="strequal({resolution}, 'hd720p')" x="{areawidth}*0.33" y="{areaheight}*0.954" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="720" />
	</area>

	<area condition="{isHD}" x="{areawidth}*0.38" y="{areaheight}*0.955" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="SDTV" />
	</area>
	<area condition="not{isHD}" x="{areawidth}*0.38" y="{areaheight}*0.955" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="SDTV" />
	</area>

	<area condition="not{isHD}" x="{areawidth}*0.43" y="{areaheight}*0.956" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="HDTV" />
	</area>
	<area condition="{isHD}" x="{areawidth}*0.43" y="{areaheight}*0.956" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="HDTV" />
	</area>

	<area condition="strnotequal({aspect}, '21:9')" x="{areawidth}*0.48" y="{areaheight}*0.957" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="21:9" />
	</area>
	<area condition="strequal({aspect}, '21:9')" x="{areawidth}*0.48" y="{areaheight}*0.957" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="21:9" />
	</area>

	<area condition="strnotequal({aspect}, '16:9')" x="{areawidth}*0.53" y="{areaheight}*0.956" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="16:9" />
	</area>
	<area condition="strequal({aspect}, '16:9')" x="{areawidth}*0.53" y="{areaheight}*0.956" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="16:9" />
	</area>

	<area condition="strnotequal({aspect}, '4:3')" x="{areawidth}*0.58" y="{areaheight}*0.955" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="4:3" />
	</area>
	<area condition="strequal({aspect}, '4:3')" x="{areawidth}*0.58" y="{areaheight}*0.955" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="4:3" />
	</area>

	<area condition="not{isWideScreen}" x="{areawidth}*0.63" y="{areaheight}*0.954" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="WIDE" />
	</area>
	<area condition="{isWideScreen}" x="{areawidth}*0.63" y="{areaheight}*0.954" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="WIDE" />
	</area>
    </recinfo>

    <!-- Available Variables currenttime:
    {reccurrent}                   Current Time in hh:mm:ss
    -->
    <currenttime>
        <area x="3%" y="81%" width="30%" height="4%" layer="2">
            <drawtext x="0" valign="center" font="{regular}" fontsize="100%" color="{clrWhite}" text="{reccurrent}" />
        </area>
    </currenttime>

    <!-- Available Variables totaltime:
    {rectotal}                   Total Time in hh:mm:ss
    {timeshift}                  true if a timeshifted recording is displayed
    {timeshifttotal}             Total Time of timeshift event in hh:mm
    -->
    <totaltime>
        <area x="67%" y="81%" width="30%" height="4%" layer="2">
            <drawtext condition="not{timeshift}" align="right" valign="center" font="{regular}" fontsize="100%" color="{clrWhite}" text="{rectotal}" />
            <drawtext condition="{timeshift}" name="totaltime" align="right" valign="center" font="{regular}" fontsize="100%" color="{clrWhite}" text="({rectotal})" />
            <drawtext condition="{timeshift}" x="{posx(totaltime)} - {width(totaltime)}" valign="center" font="{regular}" fontsize="100%" color="{clrTimeshiftProgressbar}" text="{timeshifttotal}" />
	</area>
	<!-- timeshift info icon -->
	<area condition="not{timeshift}" x="{areawidth}*0.68" y="{areaheight}*0.951" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_inactive" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconInactive}" text="TimeShift" />
	</area>
	<area condition="{timeshift}" x="{areawidth}*0.68" y="{areaheight}*0.951" width="{areawidth}*0.04" height="{areaheight}*0.03"  layer="2">
	    <drawimage x="0" y="0" width="{areawidth}" height="{areaheight}" imagetype="icon" path="ico_status_active" />
	    <drawtext name="text" x="{areawidth}/2 - {width(text)}/2 - 1" valign="center" width="{areawidth} - 2" font="{italic}" fontsize="{areaheight}*0.75" color="{clrStatusIconActive}" text="TimeShift" />
	</area>
    </totaltime>

    <!-- Available Variables endtime:
    {recend}                     End Time in hh:mm
    -->
    <endtime>
        <area x="{areawidth}*0.72" y="{areaheight}*0.87" width="{areawidth}*0.45" height="{areaheight}*0.07" layer="2">
            <drawtext align="left" y="52%" font="{regular}" fontsize="48%" color="{clrFontTitle}" width="100%" text="{tr(Playbackends)} {recend}" />
        </area>
    </endtime>

    <!-- Available Variables progressbar:
    {current}                   current frame of recording
    {total}                     total frames of recording
    {timeshift}                 true if a timeshifted recording is displayed
    {timeshifttotal}            total number of frames of timeshift event
    -->
    <progressbar>
	<!-- ohne timeshift -->
        <area condition="not{timeshift}" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="2">
            <drawellipse x="1" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrProgressbar}" quadrant="0" />
            <drawellipse x="1 + {current}/{total}*{areawidth} - {current}/{total}*{areaheight}" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrProgressbar}" quadrant="0" />
            <drawrectangle x="{areaheight}/2" y="1" width="{current}/{total}*{areawidth} - {current}/{total}*{areaheight}" height="{areaheight}-2" color="{clrProgressbar}" />
	</area>
	<!-- timeshift -->
        <area condition="{timeshift}" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="2">
            <drawellipse x="1" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrTimeshiftProgressbar}" quadrant="0" />
            <drawellipse x="1 + {current}/{timeshifttotal}*{areawidth} - {current}/{timeshifttotal}*{areaheight}" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrTimeshiftProgressbar}" quadrant="0" />
            <drawrectangle x="{areaheight}/2" y="1" width="{current}/{timeshifttotal}*{areawidth} - {current}/{timeshifttotal}*{areaheight}" height="{areaheight}-2" color="{clrTimeshiftProgressbar}" />
	</area>
        <area condition="{timeshift}" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="3">
            <drawellipse x="1" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrTimeshiftProgressbar}" quadrant="0" />
            <drawellipse x="1 + {total}/{timeshifttotal}*{areawidth} - {total}/{timeshifttotal}*{areaheight}" y="1" width="{areaheight}-2" height="{areaheight}-2" color="{clrProgressbar}" quadrant="0" />
            <drawrectangle x="{areaheight}/2" y="1" width="{total}/{timeshifttotal}*{areawidth} - {total}/{timeshifttotal}*{areaheight}" height="{areaheight}-2" color="{clrProgressbar}" />
	</area>
	<!-- effect -->
        <area x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.96" height="{areaheight}*0.008" layer="4">
	    <drawimage imagetype="skinpart" path="horizontalbartop" x="1" y="1" width="{current}/{total}*{areawidth} - {current}/{total}*{areaheight} + {areaheight}-2" height="{areaheight}-2"/>
	</area>
    </progressbar>

    <!-- Available Variables cutmarks:
    {timeshift}                 true if a timeshifted recording is displayed
    {marks[]}                   array of available marks
    {marks[position]}           frame of current mark
    {marks[endposition]}        frame where startmark ends
    {marks[total]}              total number of frames
    {marks[timeshifttotal]}     total number of frames of timeshift event
    {marks[active]}             true if current replay position hits exactly the mark
    {marks[startmark]}          true if mark is start mark
    -->
    <cutmarks>
	<!-- ohne timeshift -->
        <area condition="not{timeshift}" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="3">
            <loop name="marks" x="0" y="0" orientation="absolute">
                <drawrectangle x="{marks[position]}/{marks[total]}*{areawidth}" y="0" width="1" height="100%" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[total]}*{areawidth}" y="0" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[total]}*{areawidth}" y="{areaheight}-1" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="not{marks[startmark]}" x="{marks[position]}/{marks[total]}*{areawidth} - 5" y="0" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="not{marks[startmark]}" x="{marks[position]}/{marks[total]}*{areawidth} - 5" y="{areaheight}-1" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[total]}*{areawidth}" y="30%" width="{marks[endposition]}/{marks[total]}*{areawidth} - {marks[position]}/{marks[total]}*{areawidth}" height="40%" color="{clrTransWhite}" />
            </loop>
        </area>
	<!-- timeshift -->
        <area condition="{timeshift}" x="{areawidth}*0.03" y="{areaheight}*0.791" width="{areawidth}*0.94" height="{areaheight}*0.008" layer="3">
            <loop name="marks" x="0" y="0" orientation="absolute">
                <drawrectangle x="{marks[position]}/{marks[timeshifttotal]}*{areawidth}" y="0" width="1" height="100%" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[timeshifttotal]}*{areawidth}" y="0" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[timeshifttotal]}*{areawidth}" y="{areaheight}-1" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="not{marks[startmark]}" x="{marks[position]}/{marks[timeshifttotal]}*{areawidth} - 5" y="0" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="not{marks[startmark]}" x="{marks[position]}/{marks[timeshifttotal]}*{areawidth} - 5" y="{areaheight}-1" width="5" height="1" color="{clrTransWhite}" />
                <drawrectangle condition="{marks[startmark]}" x="{marks[position]}/{marks[timeshifttotal]}*{areawidth}" y="30%" width="{marks[endposition]}/{marks[timeshifttotal]}*{areawidth} - {marks[position]}/{marks[timeshifttotal]}*{areawidth}" height="40%" color="{clrTransWhite}" />
            </loop>
        </area>
    </cutmarks>

    <!-- Available Variables controlicons and controliconsmodeonly:
    {play}              true if recording is played currently
    {pause}             true if recording is paused
    {forward}           true if fast forwarding 
    {forward1x}         true if fast forwarding 1x (with 3 trickspeeds)
    {forward2x}         true if fast forwarding 2x (with 3 trickspeeds)
    {forward3x}         true if fast forwarding 3x (with 3 trickspeeds)
    {rewind}            true if rewinding 
    {rewind1x}          true if rewinding 1x (with 3 trickspeeds)
    {rewind2x}          true if rewinding 2x (with 3 trickspeeds)
    {rewind3x}          true if rewinding 3x (with 3 trickspeeds)
    -->
    <controlicons>
        <area x="30%" y="87%" width="40%" height="7%" layer="3">
            <drawimage condition="not{rewind} ++ not{rewind1x} ++ not{rewind2x} ++ not{rewind3x}" imagetype="icon" path="ico_rew_off" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind}" imagetype="icon" path="ico_rew" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind1x}" imagetype="icon" path="ico_rew_1x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind2x}" imagetype="icon" path="ico_rew_2x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind3x}" imagetype="icon" path="ico_rew_3x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            
            <drawimage condition="not{pause}" imagetype="icon" path="ico_pause_off" x="{areawidth}/2 - {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{pause}" imagetype="icon" path="ico_pause" x="{areawidth}/2 - {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>

            <drawimage condition="not{play}" imagetype="icon" path="ico_play_off" x="{areawidth}/2" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{play}" imagetype="icon" path="ico_play" x="{areawidth}/2" y="0" width="{areaheight}" height="{areaheight}"/>

            <drawimage condition="not{forward} ++ not{forward1x} ++ not{forward2x} ++ not{forward3x}" imagetype="icon" path="ico_ff_off" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward}" imagetype="icon" path="ico_ff" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward1x}" imagetype="icon" path="ico_ff_1x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward2x}" imagetype="icon" path="ico_ff_2x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward3x}" imagetype="icon" path="ico_ff_3x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
        </area>
    </controlicons>

    <controliconsmodeonly>
        <area x="30%" y="88%" width="40%" height="7%" layer="3">
            <drawimage condition="not{rewind} ++ not{rewind1x} ++ not{rewind2x} ++ not{rewind3x}" imagetype="icon" path="ico_rew_off" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind}" imagetype="icon" path="ico_rew" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind1x}" imagetype="icon" path="ico_rew_1x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind2x}" imagetype="icon" path="ico_rew_2x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{rewind3x}" imagetype="icon" path="ico_rew_3x" x="{areawidth}/2 - 2*{areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            
            <drawimage condition="not{pause}" imagetype="icon" path="ico_pause_off" x="{areawidth}/2 - {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{pause}" imagetype="icon" path="ico_pause" x="{areawidth}/2 - {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>

            <drawimage condition="not{play}" imagetype="icon" path="ico_play_off" x="{areawidth}/2" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{play}" imagetype="icon" path="ico_play" x="{areawidth}/2" y="0" width="{areaheight}" height="{areaheight}"/>

            <drawimage condition="not{forward} ++ not{forward1x} ++ not{forward2x} ++ not{forward3x}" imagetype="icon" path="ico_ff_off" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward}" imagetype="icon" path="ico_ff" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward1x}" imagetype="icon" path="ico_ff_1x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward2x}" imagetype="icon" path="ico_ff_2x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
            <drawimage condition="{forward3x}" imagetype="icon" path="ico_ff_3x" x="{areawidth}/2 + {areaheight}" y="0" width="{areaheight}" height="{areaheight}"/>
        </area>
    </controliconsmodeonly>

    <!-- Available Variables jump:
    {jump}                      time to jump to in hh:mm
    -->
    <jump>
        <area x="5%" y="90%" width="30%" height="7%" layer="2">
            <drawtext align="center" valign="center" font="{regular}" fontsize="80%" color="{clrWhite}" text="{jump}" />
        </area>
    </jump>

    <!-- Available Variables message:
    {text}                     message text
    {status}                   true if message is a status message
    {info}                     true if message is a info message
    {warning}                  true if message is a warn message
    {error}                    true if message is a error message
    -->
    <message>
        <area x="5%" y="58%" width="90%" height="15%" layer="6">
            <drawimage condition="{status}" imagetype="skinpart" path="messageStatus" x="0" y="0" width="100%" height="100%" />
            <drawimage condition="{info}" imagetype="skinpart" path="messageInfo" x="0" y="0" width="100%" height="100%" />
            <drawimage condition="{warning}" imagetype="skinpart" path="messageWarning" x="0" y="0" width="100%" height="100%" />
            <drawimage condition="{error}" imagetype="skinpart" path="messageError" x="0" y="0" width="100%" height="100%" />
        </area>
        <area x="5%" y="58%" width="90%" height="15%" layer="7">
            <drawtext align="center" valign="center" font="{regular}" fontsize="40%" color="{clrWhite}" text="{text}" />
        </area>
    </message>

    <!-- Available Variables onpause and onpausemodeonly:
    {name}                    title of recording
    {shorttext}               shorttext of recording
    {description}             description of recording
    {date}                    date of recording in dd.mm.yy
    {time}                    time of recording in hh:mm
    {daynumeric}              day as number
    {month}                   month as number
    {year}                    year as number
    {duration}                real duration of recording in minutes
    {durationhours}           real duration, full hours
    {durationminutes}         real duration, rest of minutes
    {durationevent}           duration of corresponding event in minutes
    {durationeventhours}      event duration, full hours
    {durationeventminutes}    event duration, rest of minutes

    {ismovie}                 true if event is scraped as a movie
    Available variables for movies:
    {movietitle}              movie title from themoviedb
    {movieoriginalTitle}      movie original title from themoviedb
    {movietagline}            movie tagline from themoviedb
    {movieoverview}           movie overview from themoviedb
    {movieadult}              true if movie is rated as adult
    {moviebudget}             movie budget from themoviedb in $
    {movierevenue}            movie revenue from themoviedb in $
    {moviegenres}             movie genres from themoviedb
    {moviehomepage}           movie homepage from themoviedb
    {moviereleasedate}        movie release date from themoviedb
    {movieruntime}            movie runtime from themoviedb
    {moviepopularity}         movie popularity from themoviedb
    {movievoteaverage}        movie vote average from themoviedb
    {posterwidth}             width of scraped poster
    {posterheight}            height of scraped poster
    {posterpath}              absolute path of scraped poster
    {fanartwidth}             width of scraped fanart
    {fanartheight}            height of scraped fanart
    {fanartpath}              absolute path of scraped fanart
    {movieiscollection}       true if movie is part of a collection
    {moviecollectionName}     name of movie collection
    {collectionposterwidth}   width of scraped collection poster
    {collectionposterheight}  height of scraped collection poster
    {collectionposterpath}    absolute path of scraped collection poster
    {collectionfanartwidth}   width of scraped collection fanart
    {collectionfanartheight}  height of scraped collection fanart
    {collectionfanartpath}    absolute path of scraped collection fanart
    {actors[]}                array with movie actors
    {actors[name]}            real name of actor
    {actors[role]}            actor role
    {actors[thumb]}           absolute path of scraped actor thumb
    {actors[thumbwidth]}      width of scraped actor thumb
    {actors[thumbheight]}     height of scraped actor thumb

    {isseries}                true if event is scraped as a series
    Available variables for series:
    {seriesname}              name of series
    {seriesoverview}          series overview
    {seriesfirstaired}        first aired date 
    {seriesnetwork}           network which produces series
    {seriesgenre}             series genre
    {seriesrating}            series thetvdb rating
    {seriesstatus}            status of series (running / finished)
    {episodetitle}            title of episode
    {episodenumber}           number of episode
    {episodeseason}           season of episode
    {episodefirstaired}       first aired date of episode
    {episodegueststars}       guest stars of episode
    {episodeoverview}         episode overview
    {episoderating}           user rating for episode
    {episodeimagewidth}       episode image width
    {episodeimageheight}      episode image height
    {episodeimagepath}        episode image path
    {seasonposterwidth}       episode season poster width
    {seasonposterheight}      episode season poster height
    {seasonposterpath}        episode season poster path
    {seriesposter1width}      width of 1st poster
    {seriesposter1height}     height of 1st poster
    {seriesposter1path}       path of 1st poster
    {seriesposter2width}      width of 2nd poster
    {seriesposter2height}     height of 2nd poster
    {seriesposter2path}       path of 2nd poster
    {seriesposter3width}      width of 3rd poster
    {seriesposter3height}     height of 3rd poster
    {seriesposter3path}       path of 3rd poster
    {seriesfanart1width}      width of 1st fanart
    {seriesfanart1height}     height of 1st fanart
    {seriesfanart1path}       path of 1st fanart
    {seriesfanart2width}      width of 2nd fanart
    {seriesfanart2height}     height of 2nd fanart
    {seriesfanart2path}       path of 2nd fanart
    {seriesfanart3width}      width of 3rd fanart
    {seriesfanart3height}     height of 3rd fanart
    {seriesfanart3path}       path of 3rd fanart
    {seriesbanner1width}      width of 1st banner
    {seriesbanner1height}     height of 1st banner
    {seriesbanner1path}       path of 1st banner
    {seriesbanner2width}      width of 2nd banner
    {seriesbanner2height}     height of 2nd banner
    {seriesbanner2path}       path of 2nd banner
    {seriesbanner3width}      width of 3rd banner
    {seriesbanner3height}     height of 3rd banner
    {seriesbanner3path}       path of 3rd fanart
    {actors[]}                array with movie actors
    {actors[name]}            real name of actor
    {actors[role]}            actor role
    {actors[thumb]}           absolute path of scraped actor thumb
    {actors[thumbwidth]}      width of scraped actor thumb
    {actors[thumbheight]}     height of scraped actor thumb    
    -->
    <!-- delay (in seconds) defines the time to wait till viewelement is displayed
    fadetime in ms -->
    <onpause delay="60" fadetime="500">
        <area x="0" y="0" width="100%" height="100%" layer="7">
            <fill color="{clrTransBlackDark}" />
        </area>
    </onpause>

    <onpausemodeonly delay="30" fadetime="500">
        <area x="0" y="0" width="100%" height="100%" layer="6">
            <fill color="{clrTransBlackDark}" />
        </area>
        <area x="0" y="0" width="100%" height="100%" layer="7" transparency="75">
            <drawimage condition="{isseries}" imagetype="image" path="{seriesposter1path}" align="center" valign="center" height="{areaheight}*0.98" width="{areaheight} * 0.98 * {seriesposter1height} / {seriesposter1width}"/>
	    <drawtext condition="{ismovie}" name="movtitle" align="center" y="1%" font="{regular}" fontsize="8%" color="{clrGray}" text="{movietitle}" />
            <drawrectangle condition="{showposter}++{ismovie}" x="3%" y="{posy(movtitle)} + {height(movtitle)} + 3" width="96%" height="4" color="{clrGray}" />
            <drawimage condition="{showposter}++{ismovie}" name="poster" imagetype="image" path="{posterpath}" x="1%" y="{posy(movtitle)} + {height(movtitle)} + 10" width="{areaheight} * 0.98  * {posterwidth} / {posterheight}" height="{areaheight} * 0.98"/>
	    <drawtextbox condition="{showposter}++{ismovie}" x="{posx(poster)} + {width(poster)} + 20" y="{posy(movtitle)} + {height(movtitle)} + 10" width="{areawidth} - {posx(poster)} - {width(poster)} - 40" font="{regular}" fontsize="4%" color="{clrWhite}" text="{movieoverview}" />
        </area>
        <area x="0" y="0" width="100%" height="100%" layer="7" transparency="85">
            <drawtext align="center" valign="bottom" font="{regular}" fontsize="50%" color="{clrTransWhite}" text="{tr(Pause)}" />
        </area>
    </onpausemodeonly>

    <!-- Available Variables customtokens:
    all custom tokens set by the svdrp command SCTK are available in this viewelement
    For instance, use an appropriate script which runs periodically as cronjob and
    sets these custom tokens with svdrpsend or dbus2vdr
    --> 
    <customtokens>
    </customtokens>

</displayreplay>

<!--
    <epginfo>
	<area x="{areawidth}*0.20" y="{areaheight}*0.74" width="{areawidth}*0.78" height="{areaheight}*0.09"  layer="2">
	    <drawtext name="starttime" x="0" valign="top" width="{areawidth}" font="{regular}" fontsize="{areaheight}*0.7" color="{clrFontChannelTitle}" text="{currentstart}" />
	    <drawtext x="{width(starttime)} + {areawidth}*0.03" valign="top" width="{areawidth}*0.96 - {width(starttime)} - {width(dura)}" font="{italic}" fontsize="{areaheight}*0.65" color="{clrFontChannelTitle}" text="{currenttitle}" />
	    <drawtext x="{width(starttime)} + {areawidth}*0.03" valign="bottom" width="{areawidth}" font="{regular}" fontsize="{areaheight}*0.45" color="{clrFontChannelSubtitle}" text="{currentsubtitle}" />
	    <drawtext name="dura" align="right" valign="top" font="{regular}" fontsize="{areaheight}*0.65" color="{clrFontChannelTitle}" text="{currentelapsed}/{currentduration}min" />
	</area>
    </epginfo>
-->
