diff -ruN setup-0.3.1-zulu-edition-old/HISTORY setup-0.3.1-zulu-edition/HISTORY
--- setup-0.3.1-zulu-edition-old/HISTORY	2008-01-30 21:14:17.000000000 +0100
+++ setup-0.3.1-zulu-edition/HISTORY	2008-06-19 10:04:50.000000000 +0200
@@ -1,5 +1,16 @@
 VDR Plugin 'setup' Revision History
 -----------------------------------
+2008-06-19: setup-0.3.1-zulu-edition
+- From now VDR-Extensions-Patch => 63 or
+  VDR-Extensions-Patch 62 + vdr-ext62_setup-custom-plugin-title.diff
+  is required
+- Reworked setupmenu.c and setupmenu.h
+  Added new xml 'title' tag for plugins, from now it is
+  possible to customize the menuentrys for all plugins
+  Two new functions for the 'Menu Edit':
+  - Edit / Move -> Plugins
+  - Add / Edit / Move / Delete -> Commands and Threads
+
 2008-01-30: setup-0.3.1-zulu-edition
 - Reworked the Return Value, now it is possible to set
   a default value in vdr-setup.xml
diff -ruN setup-0.3.1-zulu-edition-old/i18n.c setup-0.3.1-zulu-edition/i18n.c
--- setup-0.3.1-zulu-edition-old/i18n.c	2008-01-22 13:53:42.000000000 +0100
+++ setup-0.3.1-zulu-edition/i18n.c	2008-06-18 09:45:50.000000000 +0200
@@ -143,6 +143,204 @@
     "Rediger",
     "Editace",
   },
+  { "Title",
+    "Titel",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Command",
+    "Befehl",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Has to confirm",
+    "Zu bestätigen",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Execute as thread",
+    "Als Thread ausführen",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Create Command",
+    "Neuer Befehl",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Create Menu",
+    "Neues Menü",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Edit Command",
+    "Editiere Befehl",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Edit Plugin",
+    "Editiere Plugin",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
+  { "Edit Menu",
+    "Editiere Menü",
+    "", // Slovenski
+    "", // Italiano
+    "", // Nederlands
+    "", // Português
+    "", // Français
+    "", // Norsk
+    "", // suomi
+    "", // Polski
+    "", // Español
+    "", // ÅëëçíéêÜ (Greek)
+    "", // Svenska
+    "", // Romaneste
+    "", // Magyar
+    "", // Català
+    "", // ÀãááÚØÙ (Russian)
+    "", // Hrvatski (Croatian)
+    "", // Eesti
+    "", // Dansk
+    "", // Èesky (Czech)
+  },
   { "Delete Menu?",
     "Menü löschen?",
     "", // Slovenski
diff -ruN setup-0.3.1-zulu-edition-old/MANUAL.DE setup-0.3.1-zulu-edition/MANUAL.DE
--- setup-0.3.1-zulu-edition-old/MANUAL.DE	2005-10-12 15:51:30.000000000 +0200
+++ setup-0.3.1-zulu-edition/MANUAL.DE	2008-06-18 08:41:28.000000000 +0200
@@ -1,7 +1,7 @@
 ****** Einleitung ******
 
 Das SETUP-Plugin erlaubt die einfache Konfiguration der wichtigsten
-Systemeinstellungen über das OSD des VDR's. Dieses Plugin wurde speziell für die
+Systemeinstellungen über das OSD des VDR's. Dieses Plugin wurde ursprünglich für die
 MiniVDR Distribution entwickelt, kann aber einfach für andere Distributionen
 konfiguriert werden.
 
@@ -12,7 +12,7 @@
 ****** An- und Abwahl von Plugins ******
 
 Per OSD können Plugins an oder abgeschaltet werden. Eventuell benötigte Plugin-
-Parameter können im Konfigurationsfile minivdr-setup.xml hinzugefügt werden.
+Parameter können im Konfigurationsfile vdr-setup.xml hinzugefügt werden.
 Eine geänderte Plugin-Konfiguration wird erst nach dem nächsten Neustart aktiv.
 
 ***** VDR-Menüs *****
@@ -25,18 +25,20 @@
          und dessen Patch kann nicht zusammen mit dem Setup-Plugin verwendet
          werden!
 
-Menüs können im Setup-Plugin per OSD hinzugefügt, editiert und verschoben
-werden. Eine geänderte Menükonfiguration wird sofort nach dem Speichern und
-erneutem Öffnen des Menüs aktiv.
-
-In der Menükonfigurationsdatei "vdr-menu.xml" können zusätzlich Kommandos
-definiert werden, welche dann wie ein Plugin per OSD ausgeführt werden können.
-Eventuelle Bildschirmausgaben des Kommandos werden auf dem OSD ausgegeben.
+In der Menükonfigurationsdatei "vdr-menu.xml" können Menüs, Plugins und Kommandos
+definiert werden, welche dann per OSD ausgeführt werden können.
+Eventuelle Bildschirmausgaben der Kommandos werden auf dem OSD ausgegeben.
+
+Menüs und Kommandos können im Setup-Plugin auch per OSD hinzugefügt, editiert
+und verschoben werden. Eine geänderte Menükonfiguration wird sofort nach dem Speichern
+und erneutem Öffnen des Menüs aktiv.
+
+Plugins können mit einem frei wählbaren Title versehen werden.
 
 ****** Systemkonfiguration ändern ******
 
 Im Setup Plugin können die gängigen Systemkonfigurationen per OSD geändert
-werden. Im Konfigurations-File minivdr-setup.xml können dazu beliebige
+werden. Im Konfigurations-File vdr-setup.xml können dazu beliebige
 geschachtelte Menüs (XML Tag <menu> </menu> konfiguriert werden. Jedem
 Systemparameter wird ein Variablenname zugeordnet, der dann im angegebenen
 System-Konfigurationsfile, welches mit dem Attribut "sysconfigFile" definiert
@@ -48,8 +50,8 @@
 ****** Systemvoraussetzungen ******
 
     * In das Plugin Konfigurationsverzeichnis (z.B: /etc/vdr/plugins/setup)
-      müssen die Dateien minivdr-setup.xml und vdr-menu.xml abgelegt werden.
-    * Die in der Datei minivdr-setup.xml mit dem Attribut "sysconfigFile
+      müssen die Dateien vdr-setup.xml und vdr-menu.xml abgelegt werden.
+    * Die in der Datei vdr-setup.xml mit dem Attribut "sysconfigFile
       gekennzeichnete Datei wird vom Plugin angelegt, falls Sie nicht existieren
       sollte. In dieser Datei werden die Einstellungen in Form von
       Shellvariablen gespeichert.
@@ -62,12 +64,7 @@
 ****** Support ******
 
 Fragen, Verbesserungsvorschläge und eventuelle Fehler können direkt über das
-Forum im MiniVDR-Portal weiter gegeben werden.
-
-
-
-
-
+Forum im VDR-Portal weiter gegeben werden.
 
 
 
@@ -76,12 +73,12 @@
 *************************************
 
 Das VDR-Setup Plugin nutzt zwei Konfigurationsdateien.
-    * minivdr-setup.xml
+    * vdr-setup.xml
     * vdr-menu.xml
 
-***** Beschreibung minivdr-setup.xml *****
+***** Beschreibung vdr-setup.xml *****
 
-Die Dateiminivdr-setup.xml beschreibt die Konfiguration des Setup-Plugins im XML
+Die Datei vdr-setup.xml beschreibt die Konfiguration des Setup-Plugins im XML
 Format.
 
 <setup>
@@ -152,15 +149,14 @@
               * Replay
               * Misc
               * Plugins
-          Zusätzlich zu den VDR-Standardmenüs sind die folgenden Untermenü
+          Zusätzlich zu den VDR-Standardmenüs sind die folgenden Untermenüs
           definiert:
-              * ActPlugins (Aktiviere /Deaktiviere Plugin)
+              * ActPlugins (Aktiviere / Deaktiviere Plugin)
               * VDRMenu (Editiere das VDR-Menü)
           Während dem Build-Prozess werden alle in <vdr>/menu.c definierten
           Setup-Menüs eingelesen und konfiguriert.
-          Ist z.B. der BigPatch angewendet worden, dann können zum Beispiel
-          zusätzlich die folgenden Werte genutzt werden: 
-              * BigPatch (Menü des Bigpatches)
+          Ist der Live-Buffer Patch angewendet worden, kann auch der zusätzliche
+          Wert genutzt werden:
               * LiveBuffer (Menü des Live-Buffer Patches)
 help1     Dieses optionale Attribut gibt einen kurzen Hilfstext an welcher in
           der Statuszeile angezeigt wird, wenn der Cursor auf dem Eintrag steht.
diff -ruN setup-0.3.1-zulu-edition-old/po/ca_ES.po setup-0.3.1-zulu-edition/po/ca_ES.po
--- setup-0.3.1-zulu-edition-old/po/ca_ES.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/ca_ES.po	2008-06-18 09:55:32.000000000 +0200
@@ -9,7 +9,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Jordi Vilà <jvila@tinet.org>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -47,12 +47,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Editar"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Editar"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/cs_CZ.po setup-0.3.1-zulu-edition/po/cs_CZ.po
--- setup-0.3.1-zulu-edition-old/po/cs_CZ.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/cs_CZ.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Vladimír Bárta <vladimir.barta@k2atmitec.cz>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Editace"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Editace"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/da_DK.po setup-0.3.1-zulu-edition/po/da_DK.po
--- setup-0.3.1-zulu-edition-old/po/da_DK.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/da_DK.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Mogens Elneff <mogens@elneff.dk>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Rediger"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Rediger"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/de_DE.po setup-0.3.1-zulu-edition/po/de_DE.po
--- setup-0.3.1-zulu-edition-old/po/de_DE.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/de_DE.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Klaus Schmidinger <kls@cadsoft.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,42 @@
 msgid "Move"
 msgstr "Verschieben"
 
+msgid "Title"
+msgstr "Titel"
+
+msgid "Edit Plugin"
+msgstr "Editiere Plugin"
+
+msgid "Command"
+msgstr "Befehl"
+
+msgid "Has to confirm"
+msgstr "Zu bestätigen"
+
+msgid "Execute as thread"
+msgstr "Als Thread ausführen"
+
+msgid "Edit Command"
+msgstr "Editiere Befehl"
+
+msgid "Edit Menu"
+msgstr "Editiere Menü"
+
+msgid "Create Menu"
+msgstr "Neues Menü"
+
+msgid "Create Command"
+msgstr "Neuer Befehl"
+
 msgid "Delete Menu?"
 msgstr "Menü löschen?"
 
 msgid "Up/Dn for new location - color key to move"
 msgstr "Auf/Ab für neue Position - dann Farbtaste"
 
+msgid "Menu"
+msgstr "Menü"
+
 msgid "Into"
 msgstr "Hinein"
 
diff -ruN setup-0.3.1-zulu-edition-old/po/el_GR.po setup-0.3.1-zulu-edition/po/el_GR.po
--- setup-0.3.1-zulu-edition-old/po/el_GR.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/el_GR.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Dimitrios Dimitrakos <mail@dimitrios.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "ĞñïóáñìïãŞ"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "ĞñïóáñìïãŞ"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/es_ES.po setup-0.3.1-zulu-edition/po/es_ES.po
--- setup-0.3.1-zulu-edition-old/po/es_ES.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/es_ES.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Ruben Nunez Francisco <ruben.nunez@tang-it.com>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Modificar"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Modificar"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/et_EE.po setup-0.3.1-zulu-edition/po/et_EE.po
--- setup-0.3.1-zulu-edition-old/po/et_EE.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/et_EE.po	2008-06-18 09:55:32.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Arthur Konovalov <kasjas@hot.ee>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Muuda"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Muuda"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/fi_FI.po setup-0.3.1-zulu-edition/po/fi_FI.po
--- setup-0.3.1-zulu-edition-old/po/fi_FI.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/fi_FI.po	2008-06-18 09:55:32.000000000 +0200
@@ -10,7 +10,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Rolf Ahrenberg <rahrenbe@cc.hut.fi>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -48,12 +48,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Muokkaa"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Muokkaa"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/fr_FR.po setup-0.3.1-zulu-edition/po/fr_FR.po
--- setup-0.3.1-zulu-edition-old/po/fr_FR.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/fr_FR.po	2008-06-18 09:55:32.000000000 +0200
@@ -10,7 +10,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Nicolas Huillard <nhuillard@e-dition.fr>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -48,12 +48,47 @@
 msgid "Move"
 msgstr "Déplacer"
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Edition du menu"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Edition du menu"
+
+#, fuzzy
+msgid "Create Menu"
+msgstr "Créer"
+
+#, fuzzy
+msgid "Create Command"
+msgstr "Créer"
+
 msgid "Delete Menu?"
 msgstr "Effacer le menu?"
 
 msgid "Up/Dn for new location - color key to move"
 msgstr "^/v pour nouvel emplacement - touches couleurs pour déplacer"
 
+#, fuzzy
+msgid "Menu"
+msgstr "Edition du menu"
+
 msgid "Into"
 msgstr "Dans"
 
diff -ruN setup-0.3.1-zulu-edition-old/po/hr_HR.po setup-0.3.1-zulu-edition/po/hr_HR.po
--- setup-0.3.1-zulu-edition-old/po/hr_HR.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/hr_HR.po	2008-06-18 09:55:32.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Drazen Dupor <drazen.dupor@dupor.com>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Promijeni"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Promijeni"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/hu_HU.po setup-0.3.1-zulu-edition/po/hu_HU.po
--- setup-0.3.1-zulu-edition-old/po/hu_HU.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/hu_HU.po	2008-06-18 09:55:32.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Istvan Koenigsberger <istvnko@hotmail.com>, Guido Josten <guido.josten@t-online.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Beállítani"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Beállítani"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/it_IT.po setup-0.3.1-zulu-edition/po/it_IT.po
--- setup-0.3.1-zulu-edition-old/po/it_IT.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/it_IT.po	2008-06-18 09:55:32.000000000 +0200
@@ -9,7 +9,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Sean Carlos <seanc@libero.it>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -47,12 +47,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Modifica"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Modifica"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/nl_NL.po setup-0.3.1-zulu-edition/po/nl_NL.po
--- setup-0.3.1-zulu-edition-old/po/nl_NL.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/nl_NL.po	2008-06-18 09:55:32.000000000 +0200
@@ -9,7 +9,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Maarten Wisse <Maarten.Wisse@urz.uni-hd.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -47,12 +47,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Verander"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Verander"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/nn_NO.po setup-0.3.1-zulu-edition/po/nn_NO.po
--- setup-0.3.1-zulu-edition-old/po/nn_NO.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/nn_NO.po	2008-06-18 09:55:32.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Truls Slevigen <truls@slevigen.no>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Editer"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Editer"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/pl_PL.po setup-0.3.1-zulu-edition/po/pl_PL.po
--- setup-0.3.1-zulu-edition-old/po/pl_PL.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/pl_PL.po	2008-06-18 09:55:33.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Michael Rakowski <mrak@gmx.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Edytuj"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Edytuj"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/pt_PT.po setup-0.3.1-zulu-edition/po/pt_PT.po
--- setup-0.3.1-zulu-edition-old/po/pt_PT.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/pt_PT.po	2008-06-18 09:55:33.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Paulo Lopes <pmml@netvita.pt>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Modificar"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Modificar"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/ro_RO.po setup-0.3.1-zulu-edition/po/ro_RO.po
--- setup-0.3.1-zulu-edition-old/po/ro_RO.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/ro_RO.po	2008-06-18 09:55:33.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Lucian Muresan <lucianm@users.sourceforge.net>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Modificã"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Modificã"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/ru_RU.po setup-0.3.1-zulu-edition/po/ru_RU.po
--- setup-0.3.1-zulu-edition-old/po/ru_RU.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/ru_RU.po	2008-06-18 09:55:33.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Vyacheslav Dikonov <sdiconov@mail.ru>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "ÀÕÔĞÚâØàŞÒĞâì"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "ÀÕÔĞÚâØàŞÒĞâì"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/sl_SI.po setup-0.3.1-zulu-edition/po/sl_SI.po
--- setup-0.3.1-zulu-edition-old/po/sl_SI.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/sl_SI.po	2008-06-18 09:55:33.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Matjaz Thaler <matjaz.thaler@guest.arnes.si>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Uredi"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Uredi"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/sv_SE.po setup-0.3.1-zulu-edition/po/sv_SE.po
--- setup-0.3.1-zulu-edition-old/po/sv_SE.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/sv_SE.po	2008-06-18 09:55:33.000000000 +0200
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Tomas Prybil <tomas@prybil.se>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -46,12 +46,44 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Plugin"
+msgstr "Ändra"
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+#, fuzzy
+msgid "Edit Menu"
+msgstr "Ändra"
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/po/tr_TR.po setup-0.3.1-zulu-edition/po/tr_TR.po
--- setup-0.3.1-zulu-edition-old/po/tr_TR.po	2008-01-30 12:03:26.000000000 +0100
+++ setup-0.3.1-zulu-edition/po/tr_TR.po	2008-06-18 09:55:33.000000000 +0200
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: VDR 1.5.7\n"
 "Report-Msgid-Bugs-To: <see README>\n"
-"POT-Creation-Date: 2008-01-27 20:01+0100\n"
+"POT-Creation-Date: 2008-06-17 19:53+0200\n"
 "PO-Revision-Date: 2008-01-27 18:38+0100\n"
 "Last-Translator: Oktay Yolgeçen <oktay_73@yahoo.de>\n"
 "Language-Team: <vdr@linuxtv.org>\n"
@@ -45,12 +45,42 @@
 msgid "Move"
 msgstr ""
 
+msgid "Title"
+msgstr ""
+
+msgid "Edit Plugin"
+msgstr ""
+
+msgid "Command"
+msgstr ""
+
+msgid "Has to confirm"
+msgstr ""
+
+msgid "Execute as thread"
+msgstr ""
+
+msgid "Edit Command"
+msgstr ""
+
+msgid "Edit Menu"
+msgstr ""
+
+msgid "Create Menu"
+msgstr ""
+
+msgid "Create Command"
+msgstr ""
+
 msgid "Delete Menu?"
 msgstr ""
 
 msgid "Up/Dn for new location - color key to move"
 msgstr ""
 
+msgid "Menu"
+msgstr ""
+
 msgid "Into"
 msgstr ""
 
diff -ruN setup-0.3.1-zulu-edition-old/README setup-0.3.1-zulu-edition/README
--- setup-0.3.1-zulu-edition-old/README	2008-01-22 18:18:56.000000000 +0100
+++ setup-0.3.1-zulu-edition/README	2008-06-19 10:07:10.000000000 +0200
@@ -4,7 +4,10 @@
 
 Project's homepage:          www.vdrtools.de
 
-Latest version available at: www.vdrtools.de
+Latest original version available at: www.vdrtools.de
+
+Latest hacked version available at:
+www.zulu-entertainment.de/files/vdr-setup/vdr-setup-0.3.1-zulu-edition.tgz
 
 See the file COPYING for license information.
 
@@ -34,8 +37,11 @@
 ============
 It is required to apply the patch to VDR included with the plugin.
 
+For vdr-setup-0.3.1-zulu-edition the VDR-Extensions-Patch => 63 or
+VDR-Extensions-Patch 62 + vdr-ext62_setup-custom-plugin-title.diff is required
+
 
-Also please make shure, that the file specified with the parameter "sysconfigFile"
+Also please make sure, that the file specified with the parameter "sysconfigFile"
  (see vdr-setup.xml) exists.
 The Plugin will save the configured parameters in this file in the form of:
 
diff -ruN setup-0.3.1-zulu-edition-old/setupmenu.c setup-0.3.1-zulu-edition/setupmenu.c
--- setup-0.3.1-zulu-edition-old/setupmenu.c	2008-01-27 17:56:16.000000000 +0100
+++ setup-0.3.1-zulu-edition/setupmenu.c	2008-06-19 09:36:48.000000000 +0200
@@ -1,12 +1,12 @@
 /****************************************************************************
- * DESCRIPTION: 
+ * DESCRIPTION:
  *             Creates VDR Menus
  *
  * $Id: setupmenu.cpp,v 1.21 2006/03/05 09:47:26 ralf Exp $
  *
- * Contact:    ranga@vdrtools.de        
+ * Contact:    ranga@vdrtools.de
  *
- * Copyright (C) 2004 by Ralf Dotzert 
+ * Copyright (C) 2005 by Ralf Dotzert
  ****************************************************************************/
 
 #include <stdlib.h>
@@ -29,15 +29,14 @@
 //#################################################################################################
 cSetupPluginMenu::cSetupPluginMenu(Config  *config) : cOsdMenu(tr("Plugins activate / deactivate"), 42)
 {
-  _moveMode=false;
-  _sortMode=false;
+  _moveMode = false;
+  _sortMode = false;
 
-  if( config != NULL && config->GetPlugins() != NULL )
-  {
-    _config  = config;
-    _plugins = config->GetPlugins();
-    Set();
-  }
+  if (config != NULL && config->GetPlugins() != NULL) {
+     _config  = config;
+     _plugins = config->GetPlugins();
+     Set();
+    }
 }
 
 cSetupPluginMenu::~cSetupPluginMenu()
@@ -51,29 +50,28 @@
 {
 
   int current = Current();
-  
+
   Clear();
-  for(int i=0; i<_plugins->GetNr(); i++)
-  {
-    if(_plugins->Get(i)->GetProtect())
-    {
-        char *title = NULL;
-
-        asprintf(&title, "%s:\t%s", _plugins->Get(i)->GetInfo(),tr("protected")); 
-        Add(new cOsdItem (title));
-        free(title);
-    }
-    else
-       Add(new cMenuEditBoolItem(_plugins->Get(i)->GetInfo(), _plugins->Get(i)->GetActiveRef(), trVDR("no"), trVDR("yes")));
-  }
-  if( current == -1 && _plugins->GetNr() >0)
-    current=0;
 
+  for (int i=0; i<_plugins->GetNr(); i++) {
+      if (_plugins->Get(i)->GetProtect()) {
+         char *title = NULL;
+         asprintf(&title, "%s:\t%s", _plugins->Get(i)->GetInfo(),tr("protected")); 
+         Add(new cOsdItem (title));
+         free(title);
+         }
+      else
+         Add(new cMenuEditBoolItem(_plugins->Get(i)->GetInfo(), _plugins->Get(i)->GetActiveRef(), trVDR("no"), trVDR("yes")));
+      }
+
+  if (current == -1 && _plugins->GetNr() > 0)
+     current = 0;
   SetCurrent(Get(current));
-  if( _moveMode)
-    SetHelp(tr("PageUp"),  tr("PageDown"), tr("Before"), tr("After"));
+
+  if (_moveMode)
+     SetHelp(tr("PageUp"),  tr("PageDown"), tr("Before"), tr("After"));
   else
-    SetHelp(tr("PageUp"),  tr("PageDown"), trVDR("Parameters"), tr("Move"));
+     SetHelp(tr("PageUp"),  tr("PageDown"), trVDR("Parameters"), tr("Move"));
 
   setHelp();
   Display();
@@ -83,78 +81,71 @@
 {
   bool HadSubMenu = HasSubMenu();
   eOSState state = cOsdMenu::ProcessKey(Key);
-  if(HasSubMenu() || HadSubMenu)
-    return state;
+  if (HasSubMenu() || HadSubMenu)
+     return state;
 
-  switch(Key)
-    {
-            case kOk :
-                        _config->SaveFile();
-                        return osBack;
-                        break;
-
-            case kRed:   PageUp();
-                         Set();
-                         break;
-
-            case kGreen: PageDown();
-                         Set();
-                         break;
-            case kYellow:
-
-                      if(_moveMode)
-                      {
-                        _plugins->MovePlugin(_startIndex, Current(), Plugins::BEFORE);
-                        _moveMode = !_moveMode;
-                        Set();
+  switch (Key) {
+    case kOk :
+                   _config->SaveFile();
+                   return osBack;
+                   break;
+
+    case kRed:
+                   PageUp();
+                   Set();
+                   break;
+
+    case kGreen:
+                   PageDown();
+                   Set();
+                   break;
+    case kYellow:
+                   if (_moveMode) {
+                      _plugins->MovePlugin(_startIndex, Current(), Plugins::BEFORE);
+                      _moveMode = !_moveMode;
+                      Set();
                       }
-                      else // Edit Parameter
-                      {
-                        char *tmp=NULL;
-                        asprintf(&tmp, "%s-%s", trVDR("Plugin"), trVDR("Parameters"));
-                        return(AddSubMenu(new cSetupPluginParameter(tmp, _plugins->Get(Current()))));
-                        free(tmp);
+                   else { // Edit Parameter
+                      char *tmp=NULL;
+                      asprintf(&tmp, "%s-%s", trVDR("Plugin"), trVDR("Parameters"));
+                      return(AddSubMenu(new cSetupPluginParameter(tmp, _plugins->Get(Current()))));
+                      free(tmp);
                       }
-                      break;
-            case kBlue:
-                      if(_moveMode)
-                      {
-                        _plugins->MovePlugin(_startIndex, Current(), Plugins::BEHIND);
+                   break;
+    case kBlue:
+                   if (_moveMode) {
+                      _plugins->MovePlugin(_startIndex, Current(), Plugins::BEHIND);
                       }
-                      else
-                      {
-                        _startIndex = Current();
+                   else {
+                      _startIndex = Current();
                       }
-                      _moveMode = !_moveMode;
-                      Set();
-                      break;
-            case kDown:
-            case kUp:
-                    setHelp();
-                    break;
-            default : break;
+                   _moveMode = !_moveMode;
+                   Set();
+                   break;
+    case kDown:
+    case kUp:
+                   setHelp();
+                   break;
+    default:       break;
     }
-    return state;
+  return state;
 }
 
 void cSetupPluginMenu::setHelp()
 {
-  char *tmp=NULL;
+  char *tmp = NULL;
   int  current = Current();
-  if(current >= 0 )
-  {
-    asprintf(&tmp, "%s: %s", trVDR("Plugin"), _plugins->Get(current)->GetName());
-    SetStatus(tmp);
-    free(tmp);
-  }
-
+  if (current >= 0 ) {
+     asprintf(&tmp, "%s: %s", trVDR("Plugin"), _plugins->Get(current)->GetName());
+     SetStatus(tmp);
+     free(tmp);
+     }
 }
 
 
 //#################################################################################################
 //  Edit Plugin Parameter
 //################################################################################################
-static char *ALLOW_ALL_PARAM_CHARS =" aäbcdefghijklmnoöpqrsßtuüvwxyz0123456789+-={}[]().,;#*?!@/~\"\'";
 
 cSetupPluginParameter::cSetupPluginParameter( const char *title, Plugin * plugin ) : cOsdMenu(title, 25)
 {
@@ -169,18 +160,17 @@
 
 void cSetupPluginParameter::Set( )
 {
-  char *tmp=NULL;
+  char *tmp = NULL;
   const char *param = _plugin->GetParameter();
   Clear();
-  if( param == NULL)
-    _editParameter[0]='\0';
-  else
-  {
-    strncpy(_editParameter, param, sizeof(_editParameter));
-    _editParameter[sizeof(_editParameter)]='\0';
-  }
+  if (param == NULL)
+     _editParameter[0] = '\0';
+  else {
+     strncpy(_editParameter, param, sizeof(_editParameter));
+     _editParameter[sizeof(_editParameter)] = '\0';
+     }
   asprintf(&tmp, "%s-%s", trVDR("Plugin"), trVDR("Parameters"));
-  Add(new cMenuEditStrItem(tmp, _editParameter, sizeof(_editParameter), ALLOW_ALL_PARAM_CHARS));
+  Add(new cMenuEditStrItem(tmp, _editParameter, sizeof(_editParameter), trVDR(FileNameChars)));
 
   asprintf(&tmp, "%s: %s", trVDR("Plugin"), _plugin->GetName());
   SetStatus(tmp);
@@ -193,21 +183,21 @@
 
   eOSState state = cOsdMenu::ProcessKey(Key);
 
-  switch(Key)
-  {
-     case kOk :
-                if(!_edit)
-                  return osBack;
-                else
-                {
-                  _plugin->SetParameter(_editParameter);
-                  _edit=false;
-                }
-                break;
-    case kRight:_edit = true;
-                break;
-     default : break;
-  }
+  switch (Key) {
+    case kOk:
+              if (!_edit)
+                 return osBack;
+              else {
+                 _plugin->SetParameter(_editParameter);
+                 _edit=false;
+                 }
+              break;
+    case kRight:
+              _edit = true;
+              break;
+    default:
+              break;
+    }
   return state;
 }
 
@@ -215,13 +205,12 @@
 //#################################################################################################
 //  cSetupVdrMenu
 //################################################################################################
-//static char *ALLOW_ALL_CHARS =" aäbcdefghijklmnoöpqrsßtuüvwxyz0123456789-.";
 
 cSetupVdrMenu::cSetupVdrMenu(const char *title): cOsdMenu(title, 25)
 {
-  _startIndex           =0;
-  _createEditNodeIndex  =0;
-  
+  _startIndex           = 0;
+  _createEditNodeIndex  = 0;
+
   // Load Menu Configuration
   char *menuXML = NULL;
 #if VDRVERSNUM < 10507
@@ -249,47 +238,103 @@
   cSubMenuNode *node = NULL;
   int nr = _vdrSubMenu.GetNrOfNodes();
 
-
   Clear();
 
-  switch(_menuState)
-  {
+  switch (_menuState) {
     case UNDEFINED:
-    case MOVE     :
-                for( int i=0; i<nr; i++)
-                {
-                    if((node = _vdrSubMenu.GetAbsNode(i)) != NULL)
-                    {
-                        char *tmp=createMenuName(node);
-                        Add(new cOsdItem(tmp));
-                        free(tmp);
+                SetTitle(tr("Menu Edit"));
+    case MOVE:
+                for (int i=0; i<nr; i++) {
+                    if ((node = _vdrSubMenu.GetAbsNode(i)) != NULL) {
+                       char *tmp = createMenuName(node);
+                       Add(new cOsdItem(tmp));
+                       free(tmp);
+                       }
                     }
-                }
-                current=_createEditNodeIndex;
-                if( current >= nr)
-                    current = nr-1;
+                current = _createEditNodeIndex;
+                if (current >= nr)
+                   current = nr-1;
                 break;
-     case EDIT:
-                strncpy(_editTitle, _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetName(), sizeof(_editTitle));
-                _editTitle[sizeof(_editTitle)]='\0';
-//                Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), ALLOW_ALL_CHARS));
+    case EDIT:
+                if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::PLUGIN) {
+/*
+                   char *name = NULL;
+                   asprintf(&name, "%s:\t%s", trVDR("Name"), _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetName());
+                   Add(new cOsdItem(name));
+                   free(name);
+*/
+                   if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetCustomTitle() != NULL)
+                      strncpy(_editTitle, _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetCustomTitle(), sizeof(_editTitle));
+                   else
+                      strncpy(_editTitle, "", sizeof(_editTitle));
+                   _editTitle[sizeof(_editTitle)] = '\0';
+                   Add(new cMenuEditStrItem(tr("Title"), _editTitle, sizeof(_editTitle), trVDR(FileNameChars)));
+
+                   char *menutitle = NULL;
+                   asprintf(&menutitle, "%s '%s'", tr("Edit Plugin"), _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetName());
+                   SetTitle(menutitle);
+                   free(menutitle);
+                   }
+                else if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::COMMAND ||
+                         _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::THREAD) {
+                   strncpy(_editTitle, _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetName(), sizeof(_editTitle));
+                   _editTitle[sizeof(_editTitle)] = '\0';
+                   Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), trVDR(FileNameChars)));
+
+                   strncpy(_editCommand, _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetCommand(), sizeof(_editCommand));
+                   _editTitle[sizeof(_editCommand)] = '\0';
+                   Add(new cMenuEditStrItem(tr("Command"), _editCommand, sizeof(_editCommand), trVDR(FileNameChars)));
+
+                   if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->CommandConfirm())
+                      _hasToConfirm = 1;
+                   else
+                      _hasToConfirm = 0;
+                   Add(new cMenuEditBoolItem(tr("Has to confirm"), &_hasToConfirm));
+
+                   if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::THREAD)
+                      _isThread = 1;
+                   else
+                      _isThread = 0;
+                   Add(new cMenuEditBoolItem(tr("Execute as thread"), &_isThread));
+
+                   SetTitle(tr("Edit Command"));
+                   }
+                else { // MENU
+                   strncpy(_editTitle, _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetName(), sizeof(_editTitle));
+                   _editTitle[sizeof(_editTitle)] = '\0';
+                   Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), trVDR(FileNameChars)));
+
+                   SetTitle(tr("Edit Menu"));
+                   }
+
+                setHelp();
+                break;
+    case CREATE:
+                strncpy(_editTitle, "", sizeof(_editTitle));
                 Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), trVDR(FileNameChars)));
+                SetTitle(tr("Create Menu"));
+                setHelp();
                 break;
-     case CREATE:
+    case CREATECMD:
                 strncpy(_editTitle, "", sizeof(_editTitle));
-//                Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), ALLOW_ALL_CHARS));
                 Add(new cMenuEditStrItem(trVDR("Name"), _editTitle, sizeof(_editTitle), trVDR(FileNameChars)));
+                strncpy(_editCommand, "", sizeof(_editCommand));
+                Add(new cMenuEditStrItem(tr("Command"), _editCommand, sizeof(_editCommand), trVDR(FileNameChars)));
+
+                _hasToConfirm = 1;
+                Add(new cMenuEditBoolItem(tr("Has to confirm"), &_hasToConfirm));
+
+                _isThread = 0;
+                Add(new cMenuEditBoolItem(tr("Execute as thread"), &_isThread));
+                SetTitle(tr("Create Command"));
+                setHelp();
                 break;
-     default:
+    default:
                 break;
-  }
-
+    }
 
   SetCurrent(Get(current));
-
   setHelp();
-  
-
   Display();
 }
 
@@ -300,177 +345,226 @@
 {
     cSubMenuNode *node = NULL;
     eOSState state = cOsdMenu::ProcessKey(Key);
-    if( HasSubMenu())
-      return state;
-
-    switch(Key)
-    {
-            case kRed:
-                      if(_menuState == UNDEFINED )
-                      {
+    if (HasSubMenu())
+       return state;
+//    isyslog("setup: %d", state); // osUnknown=0, osContinue=1, osBack=16
+    if (state == osUnknown || state == osBack) {
+       switch (Key) {
+         case k0:
+                       if (_menuState == UNDEFINED) {
+                          _menuState = CREATECMD;
+                          _createEditNodeIndex = Current();
+                          Set();
+                          }
+                       break;
+         case kRed:
+                      if (_menuState == CREATE) {
+                          _menuState = CREATECMD;
+                          Set();
+                          }
+                       else if (_menuState == CREATECMD) {
+                          _menuState = CREATE;
+                          Set();
+                          }
+                       else if (_menuState == UNDEFINED) {
                           _menuState = CREATE;
                           _createEditNodeIndex = Current();
                           Set();
-                      }
-                      break;
-            case kGreen:
-                      if(_menuState == MOVE )
-                      {
-                        if( (node= _vdrSubMenu.GetAbsNode(Current()))!= NULL && node->GetType()== cSubMenuNode::MENU)
-                        {
-                          _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::INTO);
+                          }
+                       break;
+         case kGreen:
+                       if (_menuState == MOVE) {
+                          if ((node = _vdrSubMenu.GetAbsNode(Current())) != NULL && node->GetType() == cSubMenuNode::MENU) {
+                             _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::INTO);
+                             _menuState = UNDEFINED;
+                             _createEditNodeIndex = Current();
+                             SetStatus(NULL);
+                             Set();
+                             }
+                          }
+                       else if (_menuState == UNDEFINED) {
+                          if ((node = _vdrSubMenu.GetAbsNode(Current())) != NULL && (node->GetType() == cSubMenuNode::MENU ||
+                                                                                     node->GetType() == cSubMenuNode::PLUGIN ||
+                                                                                     node->GetType() == cSubMenuNode::COMMAND ||
+                                                                                     node->GetType() == cSubMenuNode::THREAD)) {
+                             _menuState = EDIT;
+                             _createEditNodeIndex = Current();
+                             Set();
+                             }
+                          }
+                       setHelp();
+                       break;
+         case kYellow:
+                       if (_menuState == MOVE) {
+                          _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::BEFORE);
                           _menuState = UNDEFINED;
                           _createEditNodeIndex = Current();
                           SetStatus(NULL);
                           Set();
-                        }
-                      }
-                      else
-                      if(_menuState == UNDEFINED )
-                      {
-                        if( (node= _vdrSubMenu.GetAbsNode(Current()))!= NULL && node->GetType()== cSubMenuNode::MENU)
-                        {
-                            _menuState = EDIT;
-                            _createEditNodeIndex = Current();
-                            Set();
-                        }
-                      }
-                      setHelp();
-                      break;
-           case kYellow:
-                      if(_menuState == MOVE )
-                      {
-                        _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::BEFORE);
-                        _menuState = UNDEFINED;
-                        _createEditNodeIndex =Current();
-                        SetStatus(NULL);
-                        Set();
-                      }
-                      else
-                      if(_menuState == UNDEFINED )
-                      {
-                        if(Interface->Confirm(tr("Delete Menu?")))
-                        {
-                         _createEditNodeIndex = Current();
-                         _vdrSubMenu.DeleteMenu(_createEditNodeIndex);
+                          }
+                       else if (_menuState == UNDEFINED) {
+                          if (Interface->Confirm(tr("Delete Menu?"))) {
+                             _createEditNodeIndex = Current();
+                             _vdrSubMenu.DeleteMenu(_createEditNodeIndex);
+                             _menuState = UNDEFINED;
+                             Set();
+                             }
+                          }
+                       break;
+         case kBlue:
+                       if (_menuState == MOVE) {
+                          _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::BEHIND);
+                          _createEditNodeIndex = Current();
                           _menuState = UNDEFINED;
-                          Set();
-                        }
-                      }
-                      break;
-           case kBlue:
-                      if(_menuState == MOVE )
-                      {
-                        _vdrSubMenu.MoveMenu(_startIndex, Current(), cSubMenu::BEHIND);
-                         _createEditNodeIndex =Current();
-                        _menuState = UNDEFINED;
-                        SetStatus(NULL);
-                      }
-                      else
-                      if(_menuState == UNDEFINED )
-                      {
-                        _startIndex = Current();
-                         _createEditNodeIndex = _startIndex;
-                        _menuState = MOVE;
-                        SetStatus(tr("Up/Dn for new location - color key to move"));
-                      }
-                      Set();
-                      setHelp();
-                      break;
+                          SetStatus(NULL);
+                          }
+                       else if (_menuState == UNDEFINED) {
+                          _startIndex = Current();
+                          _createEditNodeIndex = _startIndex;
+                          _menuState = MOVE;
+                          SetStatus(tr("Up/Dn for new location - color key to move"));
+                          }
+                       Set();
+                       break;
 
-          case kOk :
-                       switch (_menuState)
-                       {
-                        case UNDEFINED:
+         case kOk:
+                       switch (_menuState) {
+                         case UNDEFINED:
                                     // Save Menus to file and exit submenu
-                                     state=osBack;
+                                     state = osBack;
                                     _vdrSubMenu.SetMenuSuffix(setupSetup._menuSuffix);
                                     _vdrSubMenu.SaveXml();
                                     break;
-                        case CREATE:
+                         case CREATE:
                                     _vdrSubMenu.CreateMenu(_createEditNodeIndex, _editTitle);
                                     _menuState = UNDEFINED;
                                     Set();
                                     break;
-                        case EDIT:
-                                    _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetName(_editTitle);
+                         case CREATECMD:
+                                    if (_isThread == 1)
+                                       _vdrSubMenu.CreateThread(_createEditNodeIndex, _editTitle, _editCommand, _hasToConfirm);
+                                    else
+                                       _vdrSubMenu.CreateCommand(_createEditNodeIndex, _editTitle, _editCommand, _hasToConfirm);
+                                    _menuState = UNDEFINED;
+                                    Set();
+                                    break;
+                         case EDIT:
+                                    if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::PLUGIN)
+                                       _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetCustomTitle(_editTitle);
+                                    else if (_vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::COMMAND ||
+                                             _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->GetType() == cSubMenuNode::THREAD) {
+                                       _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetName(_editTitle);
+                                       if (_isThread == 1)
+                                          _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetType(cSubMenuNode::THREAD);
+                                       else
+                                          _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetType(cSubMenuNode::COMMAND);
+                                       _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetCommand(_editCommand);
+                                       _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetCommandConfirm(_hasToConfirm);
+                                       }
+                                    else
+                                       _vdrSubMenu.GetAbsNode(_createEditNodeIndex)->SetName(_editTitle);
                                     _menuState = UNDEFINED;
                                     Set();
                                     break;
 
-                        default:
+                         default:
                                     break;
-                       }
+                         }
                        break;
-            case kBack:
-                       if( _menuState == CREATE || _menuState==EDIT)
-                       {
-                         _menuState=UNDEFINED;
-                         Set();
-                         state=osContinue;
-                       }
+         case kBack:
+                       state = osBack;
+                       if (_menuState == CREATE || _menuState == CREATECMD || _menuState == EDIT) {
+                          _menuState = UNDEFINED;
+                          Set();
+                          state = osContinue;
+                          }
+                       break;
+         case kDown:
+         case kUp:
+         case kRight:
+         case kLeft:
+                       if (_menuState == MOVE)
+                          setHelp();
+                       break;
+         default:
+                       break;
+         }
+      }
+   else if (state == osContinue) {
+       switch (Key) {
+         case kBack:
+                      setHelp();
+                      break;
+         case kDown:
+         case kUp:
+         case kRight:
+         case kLeft:
+                       if (_menuState == MOVE)
+                          setHelp();
+                       break;
+         default:
+                       break;
+         }
+      }
 
-            case kDown:
-            case kUp:
-            case kRight:
-            case kLeft:
-                     if(_menuState == MOVE)
-                        setHelp();
-                     break;
-            default :
-                     break;
-    }
-    return state;
+   return state;
 }
+
 // --------------- Private Methods ---------------------
 void cSetupVdrMenu::setHelp( )
 {
   cSubMenuNode *node = NULL;
-  
-  if( _menuState == MOVE)
-  {
-    if( (node= _vdrSubMenu.GetAbsNode(Current()))!= NULL && node->GetType()== cSubMenuNode::MENU)
-      SetHelp(NULL, tr("Into"), tr("Before"), tr("After"));
-    else
-      SetHelp(NULL, NULL, tr("Before"), tr("After"));
-  }
+
+   if (_menuState == CREATE)
+     SetHelp(tr("Command"), NULL, NULL, NULL);
+  else if (_menuState == CREATECMD)
+     SetHelp(tr("Menu"), NULL, NULL, NULL);
+  else if (_menuState == EDIT)
+     SetHelp(NULL, NULL, NULL, NULL);
+  else if (_menuState == MOVE) {
+     if ((node= _vdrSubMenu.GetAbsNode(Current())) != NULL && node->GetType() == cSubMenuNode::MENU)
+        SetHelp(NULL, tr("Into"), tr("Before"), tr("After"));
+     else
+        SetHelp(NULL, NULL, tr("Before"), tr("After"));
+     }
   else
-    SetHelp(tr("Create"), tr("Edit"), tr("Delete"), tr("Move"));
+     SetHelp(tr("Create"), tr("Edit"), tr("Delete"), tr("Move"));
 }
 
 char * cSetupVdrMenu::createMenuName( cSubMenuNode *node )
 {
   char *prefix = NULL;
-  char *tmp=NULL;
+  char *tmp = NULL;
   int   level = node->GetLevel();
 
   // Set Prefix
   prefix = (char*) malloc(1);
   prefix[0] = '\0';
-  for(int i=0; i<level; i++)
-    asprintf(&prefix, "|   %s", prefix);
+  for (int i=0; i<level; i++)
+      asprintf(&prefix, "|   %s", prefix);
 
-  
-  cSubMenuNode::Type type =node->GetType();
-  
-  if( type == cSubMenuNode::MENU)
-    asprintf(&tmp, "%s+%s", prefix, node->GetName());
+  cSubMenuNode::Type type = node->GetType();
+
+  if (type == cSubMenuNode::MENU)
+     asprintf(&tmp, "%s+%s", prefix, node->GetName());
+  else if (type == cSubMenuNode::SYSTEM)
+     asprintf(&tmp, "%s %s", prefix, trVDR(node->GetName()));
+  else if (type == cSubMenuNode::PLUGIN)
+     if (node->GetCustomTitle() != NULL && strcmp(node->GetCustomTitle(), "") != 0)
+        asprintf(&tmp, "%s %s  (%s)", prefix, node->GetCustomTitle(), node->GetName());
+     else
+        asprintf(&tmp, "%s %s  (%s)", prefix, node->GetPluginMainMenuEntry(), node->GetName());
   else
-   if( type == cSubMenuNode::SYSTEM)
-    asprintf(&tmp, "%s %s",  prefix, trVDR(node->GetName()));
-   else
-    asprintf(&tmp, "%s %s",  prefix, node->GetName());
+     asprintf(&tmp, "%s %s",  prefix, node->GetName());
 
   free(prefix);
-  
+
   return(tmp);
 }
 
 //#################################################################################################//  cSetupGenericMenu
 //################################################################################################
 cSetupGenericMenu::cSetupGenericMenu(const char *title, MenuNode *node, Config  *config)  : cSetupMenu()
-
-
 {
   _node     = node;
   _editItem = false;
@@ -480,9 +574,8 @@
   SetTitle(title);
   SetCols(25);
 
-  
-  if( _node != NULL)
-    Set();
+  if (_node != NULL)
+     Set();
 }
 
 
@@ -495,14 +588,13 @@
   static std::string tmp;
   tmp = setupSetup._entryPrefix;
 
-  if( strlen(setupSetup._entryPrefix)==0 || setupSetup._entryPrefix[0] == ' ')
-    tmp = "      ";
-  else
-  {
-    tmp =  "  ";
-    tmp += setupSetup._entryPrefix;
-    tmp += "  ";
-  }
+  if (strlen(setupSetup._entryPrefix) == 0 || setupSetup._entryPrefix[0] == ' ')
+     tmp = "      ";
+  else {
+     tmp =  "  ";
+     tmp += setupSetup._entryPrefix;
+     tmp += "  ";
+     }
 
   tmp += str;
   return(tmp.c_str());
@@ -516,182 +608,161 @@
   int current = Current();
   Clear();
   SetHasHotkeys();
-  for(int i=0; i< _node->GetNr(); i++)
-  {
-    MenuNode::Type type = _node->GetNode(i)->GetType();
-    
-    if( type == MenuNode::ENTRY )
-    {
-
-      MenuEntry *e = _node->GetNode(i)->GetMenuEntry();
-      switch( e->GetType() )
-      {
-        case Util::BOOL:
-          Add(new cMenuEditBoolItem(nohk(e->GetName()), e->GetValueBoolRef(), trVDR("no"), trVDR("yes")));
+  for (int i=0; i< _node->GetNr(); i++) {
+      MenuNode::Type type = _node->GetNode(i)->GetType();
+
+     if (type == MenuNode::ENTRY) {
+        MenuEntry *e = _node->GetNode(i)->GetMenuEntry();
+
+        switch (e->GetType()) {
+          case Util::BOOL:
+             Add(new cMenuEditBoolItem(nohk(e->GetName()), e->GetValueBoolRef(), trVDR("no"), trVDR("yes")));
              break;
-        case Util::NUMBER:
-          Add(new cMenuEditIntItem(nohk(e->GetName()), e->GetValueNumberRef(), 0, 999999999));
+          case Util::NUMBER:
+             Add(new cMenuEditIntItem(nohk(e->GetName()), e->GetValueNumberRef(), 0, 999999999));
              break;
-        case Util::TEXT:
-          Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), " aäbcdefghijklmnoöpqrsßtuüvwxyz0123456789-.#~_"));
+          case Util::TEXT:
+             Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), " aäbcdefghijklmnoöpqrsßtuüvwxyz0123456789-.#~_"));
              break;
-         case Util::NUMBER_TEXT:
-           Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), "0123456789"));
+          case Util::NUMBER_TEXT:
+             Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), "0123456789"));
              break;
-        case Util::IP:
-
-          Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValueIp(), e->GetValueIpMaxLen(), ".0123456789"));
-          break;
-        case Util::HEX:
-          Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), "0123456789ABCDEF:"));
+          case Util::IP:
+             Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValueIp(), e->GetValueIpMaxLen(), ".0123456789"));
              break;
-        case Util::SELECTION:
-        {
-              if(  e->GetNrOfSelectionValues() == 0 )
-              {
-                char *txt=NULL;
-                asprintf(&txt, "%s:\t%s", nohk(e->GetName()), tr("missing channels/xxx.conf"));
-                Add(new cOsdItem (txt));
-                free(txt);
-              }
-              else
-                Add(new cMenuEditStraItem(nohk(e->GetName()), e->GetReferenceSelection(),
-                                       e->GetNrOfSelectionValues(),
-                                       e->GetSelectionValues()) );
-        }
+          case Util::HEX:
+             Add(new cMenuEditStrItem(nohk((char*)e->GetName()), (char*)e->GetValue(), e->GetValueTextMaxLen(), "0123456789ABCDEF:"));
              break;
-        default:
-                break;
-      }
-    }
-    else if( type == MenuNode::MENUSYSTEM )
-    {
-       char *tmp = NULL;
-       asprintf(&tmp, "%s", _node->GetNode(i)->GetMenu()->GetSystem());
-       if ((strcmp(tmp, "ActPlugins") == 0) || (strcmp(tmp, "VDRMenu") == 0))
-          asprintf(&tmp, "%s%s", tr(_node->GetNode(i)->GetName()), setupSetup._menuSuffix);
-       else
-          asprintf(&tmp, "%s%s", trVDR(_node->GetNode(i)->GetName()), setupSetup._menuSuffix);
-       Add(new cOsdItem(hk(tmp)));
-       free(tmp);
-    }
-    else
-    {
-       char *tmp = NULL;
-       asprintf(&tmp, "%s%s", _node->GetNode(i)->GetName(), setupSetup._menuSuffix);
-       Add(new cOsdItem(hk(tmp)));
-       free(tmp);
-    }
-  }
+          case Util::SELECTION:
+             {
+               if (e->GetNrOfSelectionValues() == 0) {
+                  char *txt = NULL;
+                  asprintf(&txt, "%s:\t%s", nohk(e->GetName()), tr("missing channels/xxx.conf"));
+                  Add(new cOsdItem (txt));
+                  free(txt);
+                  }
+               else
+                  Add(new cMenuEditStraItem(nohk(e->GetName()), e->GetReferenceSelection(),
+                                                                e->GetNrOfSelectionValues(),
+                                                                e->GetSelectionValues()) );
+             }
+             break;
+          default:
+             break;
+          }
+        }
+     else if (type == MenuNode::MENUSYSTEM) {
+        char *tmp = NULL;
+        asprintf(&tmp, "%s", _node->GetNode(i)->GetMenu()->GetSystem());
+        if ((strcmp(tmp, "ActPlugins") == 0) || (strcmp(tmp, "VDRMenu") == 0))
+           asprintf(&tmp, "%s%s", tr(_node->GetNode(i)->GetName()), setupSetup._menuSuffix);
+        else
+           asprintf(&tmp, "%s%s", trVDR(_node->GetNode(i)->GetName()), setupSetup._menuSuffix);
+        Add(new cOsdItem(hk(tmp)));
+        free(tmp);
+        }
+     else {
+        char *tmp = NULL;
+        asprintf(&tmp, "%s%s", _node->GetNode(i)->GetName(), setupSetup._menuSuffix);
+        Add(new cOsdItem(hk(tmp)));
+        free(tmp);
+        }
+     }
   SetCurrent(Get(current));
   Display();
 }
 
 eOSState cSetupGenericMenu::ProcessKey( eKeys Key )
-{  
-    bool HadSubMenu = HasSubMenu();
-    eOSState state = cOsdMenu::ProcessKey(Key);
+{
+  bool HadSubMenu = HasSubMenu();
+  eOSState state = cOsdMenu::ProcessKey(Key);
 
-    if(HasSubMenu() || HadSubMenu)
-      return state;
+  if (HasSubMenu() || HadSubMenu)
+     return state;
 
-    MenuNode *n = _node->GetNode(Current());
+  MenuNode *n = _node->GetNode(Current());
 
-      
-      switch(Key)
-      {
-        case kOk : 
-                       if( n!= NULL &&
-                           (n->GetType() == MenuNode::MENU ||
-                            n->GetType() == MenuNode::MENUSYSTEM) )
-                     {
-                        if(n->GetType() == MenuNode::MENU)
+  switch (Key) {
+    case kOk :
+                    if (n != NULL && (n->GetType() == MenuNode::MENU || n->GetType() == MenuNode::MENUSYSTEM)) {
+                       if (n->GetType() == MenuNode::MENU)
                           return(AddSubMenu(new cSetupGenericMenu(n->GetName(), n,  _config)));
-                        else
-                        {  // Menu "system"
+                       else {  // Menu "system"
                           cOsdMenu *menu = cSetupSystemMenu::GetSystemMenu(n->GetMenu()->GetSystem(), _config);
-                           if(menu != NULL)
+                          if (menu != NULL)
                              return(AddSubMenu(menu));
-                        }
-                      }
-                      else
-                      {
-                        if(!_editItem) //close submenu only if we do not have edited an textitem
-                        {
-                          state=osBack;
+                          }
+                       }
+                    else {
+                       if (!_editItem) { //close submenu only if we do not have edited an textitem
+                          state = osBack;
                           _config->SaveFile(); // Write New Configurationfile
 
-                          for(int i=0;  i < _node->GetNr(); i++)
-                          {
-                            n = _node->GetNode(i);
-                            if( n->GetType() == MenuNode::ENTRY)
-                              ExecuteCommand(n->GetMenuEntry()->GetCommand());
-                          }
+                          for (int i=0;  i < _node->GetNr(); i++) {
+                              n = _node->GetNode(i);
+                              if ( n->GetType() == MenuNode::ENTRY)
+                                 ExecuteCommand(n->GetMenuEntry()->GetCommand());
+                              }
                           ExecuteCommand(_node->GetMenu()->GetCommand());
-                        }
-  
-                        _editItem=false;
-                      }
-                      break;
-              case kRed:
-                        {
-                          char *help = NULL;
-                          if(n->GetType() == MenuNode::ENTRY)
-                            help = GetLongHelp(n->GetMenuEntry()->GetHelp2());
-                          else
-                            help = GetLongHelp(n->GetMenu()->GetHelp2());
+                          }
 
-                          if( help != NULL )
-                          {
-                            eOSState newState = AddSubMenu(new cMenuText(tr("Help"), help, fontFix));
-                            free(help);
-                            return(newState);
+                       _editItem = false;
+                       }
+                    break;
+     case kRed:
+                    {
+                       char *help = NULL;
+                       if (n->GetType() == MenuNode::ENTRY)
+                          help = GetLongHelp(n->GetMenuEntry()->GetHelp2());
+                       else
+                          help = GetLongHelp(n->GetMenu()->GetHelp2());
+
+                       if (help != NULL) {
+                          eOSState newState = AddSubMenu(new cMenuText(tr("Help"), help, fontFix));
+                          free(help);
+                          return(newState);
                           }
+                       }
+                    break;
+     case kGreen:
+                    break;
+     case kYellow:
+                    break;
+     case kBlue:
+                    break;
+     case kRight:
+                    if (n!= NULL &&
+                        n->GetType() == MenuNode::ENTRY &&
+                       (n->GetMenuEntry()->GetType() == Util::TEXT ||
+                        n->GetMenuEntry()->GetType() == Util::NUMBER_TEXT ||
+                        n->GetMenuEntry()->GetType() == Util::HEX ||
+                        n->GetMenuEntry()->GetType() == Util::NUMBER)
+                        )
+                        _editItem = true;
+                    break;
 
-                        }
-                        break;
-              case kGreen:
-                        break;
-              case kYellow:
-                        break;
-              case kBlue:
-                        break;
-              case kRight:
-                        if( n!= NULL &&
-                            n->GetType() == MenuNode::ENTRY &&
-                            (n->GetMenuEntry()->GetType() == Util::TEXT ||
-                            n->GetMenuEntry()->GetType() == Util::NUMBER_TEXT ||
-                            n->GetMenuEntry()->GetType() == Util::HEX ||
-                            n->GetMenuEntry()->GetType() == Util::NUMBER 
-                            )
-                          )
-                           _editItem = true;
-                        break;
-
-                default :if( n!= NULL)
-                         {
-                          if( n->GetType() == MenuNode::ENTRY)
-                          {
-                            SetStatus( n->GetMenuEntry()->GetHelp1());
-                            if( n->GetMenuEntry()->GetHelp2() != NULL)
-                              SetHelp(tr("Help"), NULL, NULL, NULL);
-                            else
-                              SetHelp(NULL, NULL, NULL, NULL);
+     default:
+                    if (n!= NULL) {
+                       if (n->GetType() == MenuNode::ENTRY) {
+                          SetStatus(n->GetMenuEntry()->GetHelp1());
+                          if (n->GetMenuEntry()->GetHelp2() != NULL)
+                             SetHelp(tr("Help"), NULL, NULL, NULL);
+                          else
+                             SetHelp(NULL, NULL, NULL, NULL);
                           }
+                       else {
+                          SetStatus(n->GetMenu()->GetHelp1());
+                          if (n->GetMenu()->GetHelp2() != NULL)
+                             SetHelp(tr("Help"), NULL, NULL, NULL);
                           else
-                          {
-                            SetStatus( n->GetMenu()->GetHelp1());
-                            if( n->GetMenu()->GetHelp2() != NULL)
-                              SetHelp(tr("Help"), NULL, NULL, NULL);
-                            else
-                              SetHelp(NULL, NULL, NULL, NULL);
+                             SetHelp(NULL, NULL, NULL, NULL);
                           }
-                         }
-                        else
-                            SetStatus(NULL);
-                      break;
-      }
-    return state;
+                       }
+                    else
+                       SetStatus(NULL);
+                    break;
+     }
+   return state;
 }
 
 void cSetupGenericMenu::ExecuteCommand( const char * cmd )
@@ -699,20 +770,18 @@
   char *tmp=NULL;
   int   status=0;
 
-  if( cmd != NULL)
-  {
-    asprintf(&tmp, "%s: %s", tr("Execute"), cmd);
-    SetStatus(tmp);
-    free(tmp);
-    status=system(cmd);
-    if( status == -1 )
-      DEBUG3("%s: fork of command %s failed\n", DBG_PREFIX, cmd);
-    else
-    {
-      if( WEXITSTATUS(status) != 0)
-        DEBUG4("%s: executing of command %s returned=%d\n", DBG_PREFIX, cmd, WEXITSTATUS(status));
-    }
-  }
+  if (cmd != NULL) {
+     asprintf(&tmp, "%s: %s", tr("Execute"), cmd);
+     SetStatus(tmp);
+     free(tmp);
+     status=system(cmd);
+     if (status == -1)
+        DEBUG3("%s: fork of command %s failed\n", DBG_PREFIX, cmd);
+     else {
+       if (WEXITSTATUS(status) != 0)
+          DEBUG4("%s: executing of command %s returned=%d\n", DBG_PREFIX, cmd, WEXITSTATUS(status));
+       }
+     }
 }
 
 
@@ -746,33 +815,30 @@
   _childLockEntered = NULL;
   _childLockEnteredHidden = NULL;
 
-  if( _config!= NULL && _config->LoadFile() == true)
-  {
-    if(_config->GetChildLock() != NULL && strcmp(_config->GetChildLock(), "0000") != 0)
-    {
-       _childLock = true;
-       _childLockEntered          = Util::Strdupnew(_config->GetChildLock());
-       _childLockEntered[0]       = '\0';
-        _childLockEnteredHidden   = Util::Strdupnew(_config->GetChildLock());
-       _childLockEnteredHidden[0] ='\0';
-       SetAskChildCode();
-    }
-    else
-      Set();
-  }
-  else
-  {
-    SetStatus(tr("Error in configuration files"));
-    _error = true;
-  }
+  if (_config != NULL && _config->LoadFile() == true) {
+     if (_config->GetChildLock() != NULL && strcmp(_config->GetChildLock(), "0000") != 0) {
+        _childLock = true;
+        _childLockEntered          = Util::Strdupnew(_config->GetChildLock());
+        _childLockEntered[0]       = '\0';
+        _childLockEnteredHidden    = Util::Strdupnew(_config->GetChildLock());
+        _childLockEnteredHidden[0] = '\0';
+        SetAskChildCode();
+        }
+     else
+        Set();
+     }
+  else {
+     SetStatus(tr("Error in configuration files"));
+     _error = true;
+     }
 }
 
 
 cSetupMenu::~cSetupMenu()
 {
-    delete _config;
-    delete []_childLockEntered;
-    delete [] _childLockEnteredHidden;
+  delete _config;
+  delete []_childLockEntered;
+  delete [] _childLockEnteredHidden;
 }
 
 /**
@@ -780,25 +846,24 @@
  */
 void cSetupMenu::Set( )
 {
-  int current = Current();
-  Menus     *m=_config->GetMenus();
+  int current  = Current();
+  Menus     *m = _config->GetMenus();
   MenuNode  *n = NULL;
-  
+
   Clear();
   SetHasHotkeys();
 
   // Customized Setup Menus
-  for(int i=0; i< m->GetNr(); i++)
-  {
-    n = m->GetMenuNode(i);
-    char *tmp = NULL;
-    asprintf(&tmp, "%s%s", n->GetName(), setupSetup._menuSuffix);
-    Add(new cOsdItem (hk(tmp)));
-    free(tmp);
-  }
+  for (int i=0; i< m->GetNr(); i++) {
+      n = m->GetMenuNode(i);
+      char *tmp = NULL;
+      asprintf(&tmp, "%s%s", n->GetName(), setupSetup._menuSuffix);
+      Add(new cOsdItem (hk(tmp)));
+      free(tmp);
+      }
   SetCurrent(Get(current));
-  SetHelp(NULL,  NULL, trVDR("Restart"), tr("Reboot"));
-  
+  SetHelp(NULL, NULL, trVDR("Restart"), tr("Reboot"));
+
   Display();
 }
 
@@ -807,12 +872,12 @@
  */
 void cSetupMenu::SetAskChildCode( )
 {
-    Clear();
-    char * tmp= NULL;
-    asprintf(&tmp, "%s%s", tr("Enter Pin: "), _childLockEnteredHidden);
-    Add( new cOsdItem (tmp));
-    free(tmp);
-    Display();
+  Clear();
+  char *tmp = NULL;
+  asprintf(&tmp, "%s%s", tr("Enter Pin: "), _childLockEnteredHidden);
+  Add(new cOsdItem (tmp));
+  free(tmp);
+  Display();
 }
 
 
@@ -825,10 +890,10 @@
  */
 eOSState cSetupMenu::ProcessKey( eKeys Key )
 {
-  if(_childLock)
-    return(GetCodeProcessKey(Key));
+  if (_childLock)
+     return(GetCodeProcessKey(Key));
   else
-    return(StandardProcessKey(Key));
+     return(StandardProcessKey(Key));
 }
 
 /**
@@ -842,100 +907,89 @@
 
     eOSState state = cOsdMenu::ProcessKey(Key);
 
-    if(HasSubMenu() || HadSubMenu)
-      return(state);
-    
+    if (HasSubMenu() || HadSubMenu)
+       return(state);
+
     int current = Current();
     MenuNode *node = _config->GetMenus()->GetMenuNode(current);
-    switch(Key)
-    {
-            case kOk :
-                 if(node != NULL)
-                 {
-                    if( node->GetType() == MenuNode::MENU )
-                    {
-                      return AddSubMenu(new cSetupGenericMenu(node->GetName(), node, _config));
-                    }
-                    else
-                      if(node->GetType() == MenuNode::MENUSYSTEM )
-                      {
-                        cOsdMenu * menu =cSetupSystemMenu::GetSystemMenu (hk(node->GetMenu()->GetSystem()), _config);
-                        if(menu != NULL)
-                          AddSubMenu(menu);
-                      }
-                      SetCurrent(Get(current));
-                      return(osContinue);
-                 }
+    switch (Key) {
+      case kOk :
+                      if (node != NULL) {
+                         if (node->GetType() == MenuNode::MENU) {
+                            return AddSubMenu(new cSetupGenericMenu(node->GetName(), node, _config));
+                            }
+                         else if (node->GetType() == MenuNode::MENUSYSTEM) {
+                            cOsdMenu * menu =cSetupSystemMenu::GetSystemMenu (hk(node->GetMenu()->GetSystem()), _config);
+                            if (menu != NULL)
+                               AddSubMenu(menu);
+                            }
+                         SetCurrent(Get(current));
+                         return(osContinue);
+                         }
                       break;
-            case kRed:
-                    {
-                      char *help = NULL;
-                      if(node->GetType() == MenuNode::ENTRY)
-                        help = GetLongHelp(node->GetMenuEntry()->GetHelp2());
-                      else
-                        help = GetLongHelp(node->GetMenu()->GetHelp2());
-
-                      if( help != NULL )
+      case kRed:
                       {
-                        eOSState newState = AddSubMenu(new cMenuText(tr("Help"), help, fontFix));
-                        free(help);
-                        return(newState);
-                      }
+                         char *help = NULL;
+                         if (node->GetType() == MenuNode::ENTRY)
+                            help = GetLongHelp(node->GetMenuEntry()->GetHelp2());
+                         else
+                            help = GetLongHelp(node->GetMenu()->GetHelp2());
 
-                    }
+                         if (help != NULL) {
+                            eOSState newState = AddSubMenu(new cMenuText(tr("Help"), help, fontFix));
+                            free(help);
+                            return(newState);
+                            }
+
+                         }
                       break;
-            case kYellow:
-                        if (Interface->Confirm(cRecordControls::Active() ? trVDR("Recording - restart anyway?") : trVDR("Really restart?")))
-                        {
+      case kYellow:
+                      if (Interface->Confirm(cRecordControls::Active() ? trVDR("Recording - restart anyway?") : trVDR("Really restart?"))) {
 #if APIVERSNUM >= 10501
-                          ShutdownHandler.RequestEmergencyExit();
+                         ShutdownHandler.RequestEmergencyExit();
 #else
-                          cThread::EmergencyExit(true);
+                         cThread::EmergencyExit(true);
 #endif
-                          return osEnd;
-                        }
-                        return osContinue;
+                         return osEnd;
+                         }
+                      return osContinue;
                       break;
-            case kBlue:
-                        if (Interface->Confirm(cRecordControls::Active() ? trVDR("Recording - restart anyway?") : tr("Really reboot?")))
-                        {
+      case kBlue:
+                      if (Interface->Confirm(cRecordControls::Active() ? trVDR("Recording - restart anyway?") : tr("Really reboot?"))) {
 #if APIVERSNUM >= 10501
-                          ShutdownHandler.RequestEmergencyExit();
+                         ShutdownHandler.RequestEmergencyExit();
 #else
-                          cThread::EmergencyExit(true);
+                         cThread::EmergencyExit(true);
 #endif
-                          system(_config->GetBootLinux());
-                        }
-                        return osContinue;
+                         system(_config->GetBootLinux());
+                         }
+                      return osContinue;
                       break;
 
-            case kNone:
+      case kNone:
                       break;
 
-              default :if( node!= NULL)
-              {
-                if( node->GetType() == MenuNode::ENTRY)
-                {
-                  SetStatus( node->GetMenuEntry()->GetHelp1());
-                  if( node->GetMenuEntry()->GetHelp2() != NULL)
-                    SetHelp(tr("Help"), NULL, trVDR("Restart"), tr("Reboot"));
-                  else
-                    SetHelp(NULL, NULL,  trVDR("Restart"), tr("Reboot"));
-                }
-                else
-                {
-                  SetStatus( node->GetMenu()->GetHelp1());
-                  if( node->GetMenu()->GetHelp2() != NULL)
-                    SetHelp(tr("Help"), NULL,  trVDR("Restart"), tr("Reboot"));
-                  else
-                    SetHelp(NULL, NULL,  trVDR("Restart"), tr("Reboot"));
-                }
-              }
-              else
-                SetStatus(NULL);
-              break;
-    }
-
+      default:
+                      if (node!= NULL) {
+                         if (node->GetType() == MenuNode::ENTRY) {
+                            SetStatus(node->GetMenuEntry()->GetHelp1());
+                            if (node->GetMenuEntry()->GetHelp2() != NULL)
+                               SetHelp(tr("Help"), NULL, trVDR("Restart"), tr("Reboot"));
+                            else
+                               SetHelp(NULL, NULL, trVDR("Restart"), tr("Reboot"));
+                            }
+                         else {
+                            SetStatus( node->GetMenu()->GetHelp1());
+                            if (node->GetMenu()->GetHelp2() != NULL)
+                               SetHelp(tr("Help"), NULL, trVDR("Restart"), tr("Reboot"));
+                            else
+                               SetHelp(NULL, NULL, trVDR("Restart"), tr("Reboot"));
+                            }
+                         }
+                      else
+                         SetStatus(NULL);
+                      break;
+      }
     return state;
 
 }
@@ -951,77 +1005,70 @@
 {
   int num;
   eOSState state = cOsdMenu::ProcessKey(Key);
-    
-    switch(Key)
-    {
-            case k0 ... k9:
+
+  switch (Key) {
+    case k0 ... k9:
                 num = Key - k0;
                 sprintf(_childLockEntered, "%s%d", _childLockEntered, num);
                 sprintf(_childLockEnteredHidden, "%s*", _childLockEnteredHidden);
                 SetAskChildCode();
-                if(strlen(_childLockEntered) == strlen(_config->GetChildLock()))
-                {
-                  if(strcmp(_childLockEntered,_config->GetChildLock())==0)
-                  {
-                    _childLock=false;
-                    Set();
-                  }
-                  else
-                  {
-                    _childLockEntered[0]='\0';
-                    _childLockEnteredHidden[0]='\0';
-                    SetStatus(tr("Invalid Pin!"));
-                  }
-                }
-                else
-                {
-                  SetStatus(NULL);
-                }
-
+                if (strlen(_childLockEntered) == strlen(_config->GetChildLock())) {
+                   if (strcmp(_childLockEntered,_config->GetChildLock()) == 0) {
+                      _childLock=false;
+                      Set();
+                      }
+                   else {
+                      _childLockEntered[0] = '\0';
+                      _childLockEnteredHidden[0] = '\0';
+                      SetStatus(tr("Invalid Pin!"));
+                      }
+                   }
+                else {
+                   SetStatus(NULL);
+                   }
                 break;
 
 
-             case kBack:
-                      return osBack;
-                      break;
-             case kNone:
-                      break;
-            default : SetStatus(NULL);
-                      break;
+    case kBack:
+                return osBack;
+                break;
+    case kNone:
+                break;
+    default:
+                SetStatus(NULL);
+                break;
     }
-    return state;
+  return state;
 }
 
 //
 char * cSetupMenu::GetLongHelp( const char * help )
 {
-  char *helpfile    = NULL;
+  char *helpfile = NULL;
   char *result = NULL;
 
-  if( help != NULL)
-  {
-    asprintf(&helpfile, "%s/setup/help/%s", cPlugin::ConfigDirectory(), help);
-    FILE *fp = fopen(helpfile, "r");
-    if(fp != NULL )
-    {
-      fseek(fp, 0L, SEEK_END);
-    
-      long len = ftell(fp);
-      fseek(fp, 0L, SEEK_SET);
-      int byteRead=0;
-      if( (result=(char*) malloc(len+1)) == NULL)
-        DEBUG3("%s: can not allocate buffer for Helpfile: %s\n", DBG_PREFIX, helpfile );
-      else
-        if( (byteRead=fread(result, 1, len, fp)) == -1)
-          DEBUG3("%s: can not read file: Helpfile: %s\n", DBG_PREFIX, helpfile);
-      else
-        result[byteRead] = '\0';
-      fclose(fp);
-    }
-    else
-      DEBUG4("%s: can not open Helpfile: %s, %s\n", DBG_PREFIX, helpfile, strerror(errno));
-    free(helpfile);
-  }
+  if (help != NULL) {
+     asprintf(&helpfile, "%s/setup/help/%s", cPlugin::ConfigDirectory(), help);
+     FILE *fp = fopen(helpfile, "r");
+     if (fp != NULL) {
+        fseek(fp, 0L, SEEK_END);
+
+        long len = ftell(fp);
+        fseek(fp, 0L, SEEK_SET);
+        int byteRead = 0;
+        if ((result = (char*) malloc(len+1)) == NULL)
+           DEBUG3("%s: can not allocate buffer for Helpfile: %s\n", DBG_PREFIX, helpfile );
+        else
+        if ((byteRead = fread(result, 1, len, fp)) == -1)
+           DEBUG3("%s: can not read file: Helpfile: %s\n", DBG_PREFIX, helpfile);
+        else
+           result[byteRead] = '\0';
+        fclose(fp);
+        }
+     else
+        DEBUG4("%s: can not open Helpfile: %s, %s\n", DBG_PREFIX, helpfile, strerror(errno));
+     free(helpfile);
+     }
   return(result);
 }
 
diff -ruN setup-0.3.1-zulu-edition-old/setupmenu.h setup-0.3.1-zulu-edition/setupmenu.h
--- setup-0.3.1-zulu-edition-old/setupmenu.h	2005-10-12 15:44:14.000000000 +0200
+++ setup-0.3.1-zulu-edition/setupmenu.h	2008-06-17 19:10:41.000000000 +0200
@@ -36,11 +36,11 @@
 class cSetupPluginMenu : public cOsdMenu
 {
 private:
-   Config  *_config;
-   Plugins *_plugins;
-   int      _startIndex;
-   bool     _moveMode;
-   bool     _sortMode;
+    Config  *_config;
+    Plugins *_plugins;
+    int      _startIndex;
+    bool     _moveMode;
+    bool     _sortMode;
 public:
     cSetupPluginMenu(Config  *config);
     ~cSetupPluginMenu();
@@ -54,19 +54,22 @@
 class cSetupVdrMenu : public cOsdMenu
 {
 private:
-    enum MenuState { UNDEFINED, MOVE, CREATE, EDIT, DELETE};
-    cSubMenu _vdrSubMenu;
-    char     *createMenuName(cSubMenuNode *node);
+    enum MenuState { UNDEFINED, MOVE, CREATE, CREATECMD, EDIT, DELETE};
+    cSubMenu  _vdrSubMenu;
+    char      *createMenuName(cSubMenuNode *node);
     void      setHelp();
     MenuState _menuState;
-    
+
     int       _startIndex;
     int       _createEditNodeIndex;
 
-    char      _editTitle[35];
+    char      _editTitle[50];
+    char      _editCommand[999];
+    int       _hasToConfirm;
+    int       _isThread;
 public:
     cSetupVdrMenu(const char *title);
-   
+
     ~cSetupVdrMenu();
     void  Set();
     eOSState ProcessKey(eKeys Key);
@@ -77,23 +80,23 @@
 {
 private:
 
-   int      _number;
-   bool     _error;
-   bool     _childLock;
+   int  _number;
+   bool _error;
+   bool _childLock;
    char *_childLockEntered;
    char *_childLockEnteredHidden;
 
 protected:
-   Config  *_config;
+   Config *_config;
 public:
     cSetupMenu();
     ~cSetupMenu();
-    void  Set();
-    void  SetAskChildCode();
+    void Set();
+    void SetAskChildCode();
     eOSState ProcessKey(eKeys Key);
     eOSState StandardProcessKey(eKeys Key);
     eOSState GetCodeProcessKey(eKeys Key);
-    char     *GetLongHelp(const char* help);
+    char *GetLongHelp(const char* help);
 };
 
 class cSetupGenericMenu : public cSetupMenu
@@ -107,7 +110,7 @@
   public:
     cSetupGenericMenu(const char *title, MenuNode *node, Config  *config);
     ~cSetupGenericMenu();
-    void       Set();
+    void      Set();
     eOSState  ProcessKey(eKeys Key);
     void      ExecuteCommand(const char* cmd);
 };
