Index: vdr-2.2.0/ci.c
===================================================================
--- vdr-2.2.0.orig/ci.c	2015-12-24 15:16:19.964221430 +0100
+++ vdr-2.2.0/ci.c	2015-12-24 15:16:19.960221410 +0100
@@ -25,6 +25,8 @@
 #include "skins.h"
 #include "tools.h"
 
+#define CAID_BUFSIZE 1024
+
 // Set these to 'true' for debug output:
 static bool DumpTPDUDataTransfer = false;
 static bool DebugProtocol = false;
@@ -784,8 +786,15 @@
          caSystemIds[i] = CaSystemIds[i];
      }
   caSystemIds[i] = 0;
-  uint8_t caDescriptors[512];
-  int caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, sizeof(caDescriptors), caDescriptors, 0);
+  int caBufSize = CAID_BUFSIZE;
+  uint8_t *caDescriptors = new uint8_t[caBufSize];
+  int caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, caBufSize, caDescriptors, 0);
+  if (caDescriptorsLength < 0) {
+     delete [] caDescriptors;
+     caBufSize = -caDescriptorsLength + 8;
+     caDescriptors = new uint8_t[caBufSize];
+     caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, caBufSize, caDescriptors, 0);
+     }
   length = 0;
   capmt[length++] = CPLM_ONLY;
   capmt[length++] = (ProgramNumber >> 8) & 0xFF;
@@ -795,6 +804,7 @@
   capmt[length++] = 0x00; // program_info_length H (at program level)
   capmt[length++] = 0x00; // program_info_length L
   AddCaDescriptors(caDescriptorsLength, caDescriptors);
+  delete [] caDescriptors;
 }
 
 void cCiCaPmt::SetListManagement(uint8_t ListManagement)
@@ -805,21 +815,37 @@
 void cCiCaPmt::AddPid(int Pid, uint8_t StreamType)
 {
   if (Pid) {
-     uint8_t caDescriptors[512];
-     int caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, sizeof(caDescriptors), caDescriptors, Pid);
-     //XXX buffer overflow check???
-     capmt[length++] = StreamType;
-     capmt[length++] = (Pid >> 8) & 0xFF;
-     capmt[length++] =  Pid       & 0xFF;
-     esInfoLengthPos = length;
-     capmt[length++] = 0x00; // ES_info_length H (at ES level)
-     capmt[length++] = 0x00; // ES_info_length L
-     AddCaDescriptors(caDescriptorsLength, caDescriptors);
+     int caBufSize = CAID_BUFSIZE;
+     uint8_t *caDescriptors = new uint8_t[caBufSize];
+     int caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, caBufSize, caDescriptors, Pid);
+     if (caDescriptorsLength < 0) {
+       delete [] caDescriptors;
+       caBufSize = -caDescriptorsLength + 8;
+       caDescriptors = new uint8_t[caBufSize];
+       caDescriptorsLength = GetCaDescriptors(source, transponder, programNumber, caSystemIds, caBufSize, caDescriptors, Pid);
+       }
+     if (length + 5 < int(sizeof(capmt))) {
+        capmt[length++] = StreamType;
+        capmt[length++] = (Pid >> 8) & 0xFF;
+        capmt[length++] =  Pid       & 0xFF;
+        esInfoLengthPos = length;
+        capmt[length++] = 0x00; // ES_info_length H (at ES level)
+        capmt[length++] = 0x00; // ES_info_length L
+        AddCaDescriptors(caDescriptorsLength, caDescriptors);
+        }
+     else
+        esyslog("ERROR: buffer overflow in CA descriptor");
+     delete [] caDescriptors;
      }
 }
 
 void cCiCaPmt::AddCaDescriptors(int Length, const uint8_t *Data)
 {
+  if (Length < 0) {
+     dsyslog("DEBUG: calling AddCaDescriptors with Length %d", Length);
+     return;
+     }
+
   if (esInfoLengthPos) {
      if (length + Length < int(sizeof(capmt))) {
         if (Length || cmdId == CPCI_QUERY) {
Index: vdr-2.2.0/pat.c
===================================================================
--- vdr-2.2.0.orig/pat.c	2015-12-24 15:16:19.964221430 +0100
+++ vdr-2.2.0/pat.c	2015-12-24 15:16:19.964221430 +0100
@@ -166,21 +166,25 @@
      return 0;
   if (BufSize > 0 && Data) {
      int length = 0;
+     bool tooSmall = false;
      for (cCaDescriptor *d = caDescriptors.First(); d; d = caDescriptors.Next(d)) {
          if (EsPid < 0 || d->EsPid() == EsPid) {
             const int *caids = CaSystemIds;
             do {
                if (*caids == 0xFFFF || d->CaSystem() == *caids) {
-                  if (length + d->Length() <= BufSize) {
+                  if (length + d->Length() <= BufSize)
                      memcpy(Data + length, d->Data(), d->Length());
-                     length += d->Length();
-                     }
                   else
-                     return -1;
+                     tooSmall = true;
+                  length += d->Length();
                   }
                } while (*++caids);
             }
          }
+     if (tooSmall) {
+        dsyslog("DEBUG: buffer for ca-descriptors too small (%d, needed %d)", BufSize, length);
+        return -length;
+        }
      return length;
      }
   return -1;
Index: vdr-2.2.0/pat.h
===================================================================
--- vdr-2.2.0.orig/pat.h	2015-12-24 15:16:19.964221430 +0100
+++ vdr-2.2.0/pat.h	2015-12-24 15:16:19.964221430 +0100
@@ -45,7 +45,7 @@
          ///< are copied that match one of the given CA system IDs (or all of them, if CaSystemIds
          ///< is 0xFFFF).
          ///< Returns the number of bytes copied into Data (0 if no CA descriptors are
-         ///< available), or -1 if BufSize was too small to hold all CA descriptors.
+         ///< available), or -(NeededBufSize) if BufSize was too small to hold all CA descriptors.
 
 int GetCaPids(int Source, int Transponder, int ServiceId, const int *CaSystemIds, int BufSize, int *Pids);
          ///< Gets all CA pids for a given channel.
