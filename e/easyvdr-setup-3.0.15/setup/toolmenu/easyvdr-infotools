#!/bin/bash
#
# easyVDR-info
#
#  v0.1   initial  12.04.12  Captain_Beefheart
#  v0.1.1 cleanup  24.12.12  C.B.
#  v0.1.2          11.02.13  C.B.
#  v0.1.3 bugfix   20.05.13  C.B.  / Run_Udev_Test
###########################################

################################# defines/init######################################

. /usr/lib/vdr/easyvdr-config-loader
. /usr/lib/vdr/functions/easyvdr-functions-lib
. /usr/share/easyvdr/setup/easyvdr-setup-defines
. /usr/share/easyvdr/setup/easyvdr-setup-functions

TITLE=" Info-Tools fuer easyVDR $EASYVDR_VERSION "
BACKTITLE=" spezielle Infos fuer easyVDR"

############################### functions ##########################################

#####
Menu()
{
OK_CANCEL=0
while (( ! $OK_CANCEL ))
do
  TOOL_MENUITEM=$(dialog \
        --backtitle "$BACKTITLE"\
        --title "$TITLE"\
        --cancel-label " Info. Menue beenden "\
        --menu "\n\
          Steuerung mit       [  UP  ] [ DOWN ] \n\
          Zum Auszuwaehlen    <  OK  > \n\
          Zum Verlassen     < Abbrechen > "  $DIA_BOX_SIZE\
        Net_Envi      " zeigt aktive PC's im Netzwerk"             \
       Udev_Test      " schreibt Udev-Info-file - /tmp/udevtest"   \
        Com_Find      " Infos ueber Lirc serial Empfaenger"        \
       Alsa_Info      " Erweiterte Alsa Infos"                    3>&1 1>&2 2>&3 3>&- )
  OK_CANCEL=$?
  clear

  case $OK_CANCEL in
    0) Run_Selected; clear;;
    1) Good_Bye;;
  esac
done
}

#####
Run_Selected()
{
case $TOOL_MENUITEM in
       Alsa_Info) Run_Alsa_Info  ;;
        Net_Envi) Run_Show_Hosts ;;
       Udev_Test) Run_Udev_Test  ;;
        Com_Find) Run_Com_Finder ;;
esac
}

#####
Good_Bye()
{
MiniInfo " Good Bye " "$BACKTITLE" "\n\n\n und tschuess"
sleep 3; clear
}

#####
Show_File()
{
dialog --textbox $FILE_2_SHOW $DIA_BOX2_SIZE ; clear 
}

################################## main runs #######################################
################################## +++++++++ #######################################
#####

#####
Run_Alsa_Info()
{
$SETUP/toolmenu/Alsa_Utility/utils_alsa-info.sh
}

#####
#####
Run_Show_Hosts()
{
if [ -f /usr/bin/nmap ]
  then
    INFO_TEXT=\
"         \Z1 searching \n\
            ~20 sec."
    MiniInfo " working " "$BACKTITLE" "\n\n\n $INFO_TEXT"

    RESULTFILE="/tmp/.resultfile"
    WORKFILE="/tmp/.workfile"

    SUB_IP=$(ip addr show eth0 | grep "inet " | cut -dt -f2 | cut -d. -f 1-3)

    rm -f $RESULTFILE
    for ((i=0;i<10;i++))
      do
        nmap -sP $SUB_IP.1-254 | grep report | cut -d" " -f5-   >> $WORKFILE
        sleep 1
      done
    while [ -s $WORKFILE ]
      do
        RESULT=$(head -n 1 $WORKFILE )
        echo $RESULT                  >> $RESULTFILE
        <$WORKFILE grep -v "$RESULT"  >> $WORKFILE.tmp
        mv -f $WORKFILE.tmp $WORKFILE
      done
    clear

    FILE_2_SHOW=$RESULTFILE
    Show_File
    clear
  else
    INFO_TEXT=\
'     \Z1 nmap nicht \n\
         installiert.'
    MiniInfo " error " "$BACKTITLE" "\n\n\n $INFO_TEXT"
    sleep 5; clear
fi
OK_CANCEL=0
}

#####
Run_Udev_Test()
{
testfile="/tmp/udevtest"
DEV_ALL_DIRS="/dev/input /dev/usb"

rm -f $testfile

for DEV_DIR in $DEV_ALL_DIRS
  do
    for DEVICE in $DEV_DIR/*
      do
        if [ ! -d $DEVICE ] && [ -e $DEVICE ]; then
          dummy=$(udevadm info -q path -n $DEVICE )
          echo "#######################################"  >> $testfile
          echo " $DEVICE ##############################"  >> $testfile
          echo "#######################################"  >> $testfile
          udevadm info  -a -p $dummy                      >> $testfile
        fi
      done
  done
}

#####
Run_Com_Finder()
{
$SETUP/toolmenu/Comfinder/comfinder3
}

################################## --------- ######################################
################################## main runs #######################################

######################################### main ####################################################

Menu

