#!/bin/bash
#
#  Auswahl der DVB-Treiber fuer easyvdr
#
# In diesem Script koennen Einstellungen fuer die DVB-Devices abgefragt oder automatisiert eingestellt werden.
#
# das sind z.B. das
# - Abschalten eines Tuners bei Twin-Tuner-Karten
# - Vorgeben einer Reihenfolge, in der die DVB-Devices geladen werden sollen
# - Abschalten eines defekten Tuners einer FF-Karte
# - Einstellungen zu Diseq oder anderen Besonderheiten die Sat-Anlage bzw die Tuner betreffend
#
#  v.0.4.3  03.01.12   added tbs         Captain_Beefheart
#  v 0.5    17.02.12   better selection  C.B.
#  v 0.5.1  16.05.12   Countdown for driver initialisation  C.B.
#  v 0.5.2  31.01.13   new defines & cleanup C.B. 
#  v 0.6.0  01.02.15   New Driver, Dialogs and Logging by michel8
#  v 0.6.1  15.05.15   Texte by Balu & michel8
#  v 0.6.2  20.06.15   Re-Install added by michel8
#  v 1.0.0  04.04.16   New Driverpackets in easyvdr 3.0 by michel8
#
######################################

## defines

. /usr/lib/vdr/easyvdr-set-settings
. /usr/lib/vdr/easyvdr-config-loader
. /usr/lib/vdr/functions/easyvdr-functions-lib
. /usr/share/easyvdr/setup/easyvdr-setup-defines
. /usr/share/easyvdr/setup/easyvdr-setup-functions

TITLE=" Setup fuer easyVDR $EASYVDR_VERSION - Video-Eingang "
BACKTITLE=" Video-in Konfiguration fuer easyVDR"
SETUPLOG="$EASYVDR_LOGDIR/easyvdr-setup.log"

HELP1="Video-Eingabe-Devices_help"
TIMEOUT=10

####################################################################

#####
Define_Find_Driver()
{
PACK0="<empty>     ";                  N_PACK0="Kernel_Std-Treiber";    K_PACK0=" keinen Spezialtreiber dazu-installieren"
PACK1="<empty>     ";                  N_PACK1="##################";	K_PACK1=" ######   Spezial Treiber zur Auswahl:  ######"
PACK2="linux-media";                   N_PACK2="Linux-Media-Build";     K_PACK2=" # Original Linux Media Treiberpaket        ##"
PACK3="media-build-experimental-dkms"; N_PACK3="Linux-Media-Experimnt"; K_PACK3=" # neuste Linux-Media-Treiber (dkms-Paket)  ##"
PACK4="linux-media-dvbsky";            N_PACK4="Linux-Media-DVBsky-S";  K_PACK4=" # Treiber fuer DVBSky-S und viele weitere  ##"
PACK5="linux-media-dvbsky-c";          N_PACK5="Linux-Media-DVBsky-C";  K_PACK5=" # Treiber fuer DVBSky-C und viele weitere  ##"
PACK6="linux-media-satix";             N_PACK6="Linux-Media-Satix";     K_PACK6=" # DVBsky-Treiber patched fuer Satix        ##"
PACK7="linux-media-tbs";               N_PACK7="Linux-Media-TBS";       K_PACK7=" # Treiber fuer TBS-Karten                  ##"
PACK8="linux-media-tbs-c";             N_PACK8="Linux-Media-TBS-C";     K_PACK8=" # Treiber fuer TBS-C-Karten                ##"

PACK9="dddvb-dkms";                    N_PACK9="dddvb-Driver-only";     K_PACK9=" # Treiber fuer DigitalDevices (dkms-Paket) ##"

PACKA="dvb-driver-sundtek";            N_PACKA="Sundtek-Driver-Addon";  K_PACKA=" # Treiber fuer Sundtek-Sticks              ##"
PACKB="<empty>     ";                  N_PACKB="##################";    K_PACKB=" #############################################"


PAKET_STRING=`dpkg --get-selections | grep -v "deinstall" | cut -f 1`       ##  alle installierten Pakete in String

P_X_Installed="false"				# P_X_Installed ist die erkennung, dass ein Alternatives Mediapaket installiert ist
for PAKET in $PAKET_STRING
  do
    case $PAKET in
      $PACK2) P_2_Installed="true"; COL2="\Z6"; P_X_Installed="true" ;;
      $PACK3) P_3_Installed="true"; COL3="\Z6"; P_X_Installed="true" ;;
      $PACK4) P_4_Installed="true"; COL4="\Z6"; P_X_Installed="true" ;;
      $PACK5) P_5_Installed="true"; COL5="\Z6"; P_X_Installed="true" ;;
      $PACK6) P_6_Installed="true"; COL6="\Z6"; P_X_Installed="true" ;;
      $PACK7) P_7_Installed="true"; COL7="\Z6"; P_X_Installed="true" ;;
      $PACK8) P_8_Installed="true"; COL8="\Z6"; P_X_Installed="true" ;;
      $PACK9) P_9_Installed="true"; COL9="\Z6" ;;			# dddvb ist ein zusaetzliches Paket
      $PACKA) P_A_Installed="true"; COLA="\Z6" ;;			# Sundtek ist ein zusaetzliches Paket
    esac
  done
}

#####
Menu()
{
Define_Find_Driver
HELP_PRESSED="true"; COMMENT="true"
while [[ $HELP_PRESSED == "true" ]] || [[ $COMMENT == "true" ]]
  do
    SEL_DRIVER=$(dialog \
          --backtitle "$BACKTITLE"\
          --title "$TITLE"\
          --extra-button\
          --extra-label " Hilfe "\
          --colors\
          --menu "\n\
      Es wurden folgende TV-Karten auf Ihrem System gefunden,\n\
      die nicht von den standard Kerneltreibern unterstuetzt werden:\n\
      \Zb\Z5$NON_STD_CARD\Zn\n\
      Sie koennen nun ein passendes Treiberpaket installieren, oder\n
      installierte (\Z6blau markierte Pakete\Zn) neu- bzw. deinstallieren. \n\n"  $DIA_BOX_SIZE\
      $N_PACK0    " $K_PACK0"         \
      $N_PACK1    " $K_PACK1"         \
      $N_PACK2    "$COL2 $K_PACK2"    \
      $N_PACK3    "$COL3 $K_PACK3"    \
      $N_PACK4    "$COL4 $K_PACK4"    \
      $N_PACK5    "$COL5 $K_PACK5"    \
      $N_PACK6    "$COL6 $K_PACK6"    \
      $N_PACK7    "$COL7 $K_PACK7"    \
      $N_PACK8    "$COL8 $K_PACK8"    \
      $N_PACK9    "$COL9 $K_PACK9"    \
      $N_PACKA    "$COLA $K_PACKA"    \
      $N_PACKB    " $K_PACKB"         \
                        3>&1 1>&2 2>&3)
      OK_CANCEL=$?
    clear

    [[ $SEL_DRIVER == $N_PACK1  ]] && COMMENT="true" || COMMENT="false"

    if (( $OK_CANCEL == 3 ))
      then
        HELP_PRESSED="true"
        Show_Help $HELP1
      else
        HELP_PRESSED="false"  
    fi
  done
}

#####
Run_Selected()
{
if [[ $SEL_DRIVER != $N_PACK0  ]]; then
  I_FLAG="false"
  case $SEL_DRIVER in
     $N_PACK2) SEL_PACK=$PACK2; [[ $P_2_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK3) SEL_PACK=$PACK3; [[ $P_3_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK4) SEL_PACK=$PACK4; [[ $P_4_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK5) SEL_PACK=$PACK5; [[ $P_5_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK6) SEL_PACK=$PACK6; [[ $P_6_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK7) SEL_PACK=$PACK7; [[ $P_7_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK8) SEL_PACK=$PACK8; [[ $P_8_Installed == "true" ]] && I_FLAG="true";;
     $N_PACK9) SEL_PACK=$PACK9; [[ $P_9_Installed == "true" ]] && I_FLAG="true";;
     $N_PACKA) SEL_PACK=$PACKA; [[ $P_A_Installed == "true" ]] && I_FLAG="true";;
  esac
  [[ $I_FLAG == "true" ]] && Do_Deinstall || Do_Install

  INFO_TXT="\n\n\n\Z1\Zb\
     Treiber (De)Installation\n\
           abgeschlossen."
  MiniInfo " Install Info " "$BACKTITLE" "$INFO_TXT"
  sleep $TIMEOUT
fi
}

#####
Do_Install()
{
YES_NO=1
# Sicherheitsabfrage wenn schon ein Treiberpaket installiert ist,
# dieses nicht dem entspricht, welches jetzt installiert werden soll
# und das neu zu installierende nicht das Sundtek-Paket ist
if [ $P_X_Installed == "true" ] && [ $I_FLAG != "true" ]&& [ $SEL_DRIVER != $N_PACK8 ] ; then
 dialog --backtitle "$BACKTITLE"\
        --title " Treiber Installation "\
        --no-label " Neues Iinstallieren "\
        --yes-label " Treiber behalten "\
        --colors\
        --yesno "\n\n\
            \Z5\Zb Ein anderes konkurierendes Treiberpaket \Zn \n\
        ist bereits installiert und muss deinstalliert werden.\n\n\
        Wollen Sie das neue Treiberpaket wirklich installieren?" $DIA_BOX2_SIZE
 YES_NO=$?
 clear
fi

if (( $YES_NO == 1 )); then
  Unload_Modules
  Tea_Time
  echo "    DVB-TreiberPack $SEL_PACK installieren" >> $SETUPLOG
  echo "" >> $APT_GET_LOG
  echo "===> ########################################################################################" >> $APT_GET_LOG
  echo "===> `date`: Installation von DVB-Treiberpack $SEL_PACK ..." >> $APT_GET_LOG
  rm -f /tmp/MakeDone
  rm -f /tmp/DriverMakeInfo
  MakeState &
  debconf-apt-progress --logfile $APT_GET_LOG -- apt-get --yes install --reinstall $SEL_PACK
  AptStatus=$?
  touch /tmp/MakeDone
  echo "#############################################################################################" >> $APT_GET_LOG
  echo "" >> $APT_GET_LOG
  if [ $AptStatus -eq 0 ]; then
    echo "    -> Erfolg, Details siehe $APT_GET_LOG" >> $SETUPLOG
    dialog --backtitle "$BACKTITLE" --no-cancel --pause "\n\
    $SEL_PACK wurde installiert! \n\
    Details siehe $APT_GET_LOG  \n\n\
                            - Weiter - " $DIA_BOX4_SIZE  $TIMEOUT
  else
    echo "    -> Fehler bei Install von $SEL_PACK siehe $APT_GET_LOG" >> $SETUPLOG
    dialog --backtitle "$BACKTITLE" --no-cancel --pause "\n\
    Fehler beim Install von $SEL_PACK \n\
    Details siehe $APT_GET_LOG  \n\n\
                            - Weiter - " $DIA_BOX4_SIZE  $TIMEOUT
    #    debconf-apt-progress -- apt-get --yes remove $SEL_PACK 2>&1
  fi
  clear
fi
}

#####
Do_Deinstall()
{
dialog  --backtitle "$BACKTITLE"\
        --title " Treiber Deinstallation "\
        --extra-button\
        --cancel-label " De-Installieren "\
        --ok-label " Treiber behalten "\
        --extra-label " neu Installieren "\
        --colors\
        --yesno "\n\n\
                        \Z5\Zb \"$SEL_DRIVER\" \Zn \n\
                       ist bereits installiert\n\n\
                Wollen Sie diesen Treiber de-installieren\n
                       oder neu installieren ?" $DIA_BOX2_SIZE
YES_NO=$?
clear
if (( $YES_NO == 3 )); then
    Do_Install
elif (( $YES_NO == 1 )); then
  Unload_Modules
  Tea_Time
  echo "    DVB-TreiberPack $SEL_PACK entfernen" >> $SETUPLOG
  echo "" >> $APT_GET_LOG
  echo "===> ########################################################################################" >> $APT_GET_LOG
  echo "===> `date`: De-Installation von DVB-Treiberpack $SEL_PACK ..." >> $APT_GET_LOG
  rm -f /tmp/MakeDone
  rm -f /tmp/DriverMakeInfo
  MakeState &
  debconf-apt-progress --logfile $APT_GET_LOG -- apt-get --yes remove $SEL_PACK --purge # 2>&1
  AptStatus=$?
  touch /tmp/MakeDone
  echo "#############################################################################################" >> $APT_GET_LOG
  echo "" >> $APT_GET_LOG
  if [ $AptStatus -ne 0 ];then
    echo "    -> Fehler bei De-Install von $SEL_PACK siehe $APT_GET_LOG" >> $SETUPLOG
    dialog --backtitle "$BACKTITLE" --no-cancel --pause "\n\
    Fehler beim De-Install von $SEL_PACK \n\
    Details siehe $APT_GET_LOG  \n\n\
                            - Weiter - " $DIA_BOX4_SIZE $TIMEOUT
  else
    echo "    -> Erfolg, Details siehe $APT_GET_LOG" >> $SETUPLOG
  fi
  clear
fi
}

#####
Tea_Time()
{
dialog --backtitle "$BACKTITLE"\
       --title "$TITLE"\
       --colors \
       --no-cancel \
       --pause "\n\n\
                Das (De)Installieren des DVB-Teibers kann \n\
                einige Minuten dauern insbesondere bei DKMS-Paketen\n\n\
                Also ...\Z1\Zb \"Don't Panic - just wait\"\Zn ;-)" $DIA_BOX2_SIZE $TIMEOUT2
clear
}

#####
MakeState()
{
i=0; j=" - "
sleep 5
LogSize=1
while [ ! -f /tmp/MakeDone ]; do
  if [ -f /tmp/DriverMakeInfo ]; then
    . /tmp/DriverMakeInfo
    if [ -f $LogFile ]; then
      LogFile=$(ls $LogFile)
      actualsize=$(wc -c <"$LogFile")
      let "donesize=$actualsize*100/$LogSize"
      echo -ne "\r		compiling: ${donesize}% done    "
    else
      echo -ne "\r		                        	"
    fi
    sleep 1
  else
    ((i++))
    if [ $i -gt 20 ]; then
      case $j in
	" \ ") j=" | ";;
	" | ") j=" / ";;
	" / ") j=" - ";;
	" - ") j=" \ ";;
      esac
    echo -ne "\r		still working ${j}		"
    fi
  fi
  sleep 1
done
}

## Setup.State schreiben ##
Write_Status()
{
sed -i '/"*easyvdr-config-video-in"*/d' $SETUP_STATUS
echo "# `date` easyvdr-config-video-in zuletzt ausgefuehrt" >> $SETUP_STATUS
sed -i '/Video_in_configured"*/d' $SETUP_STATUS
echo "Video_in_configured=\"true\"" >> $SETUP_STATUS
}

#####
Unload_Modules()
{
echo "    Treibermodule und lirc entladen" >> $SETUPLOG
/usr/share/easyvdr/unload_dvb
#Sicherheitshalber auch lirc-module entladen
# Funktionen aus /usr/lib/vdr/easyvdr-set-settings:
Stop_Rmt_Daemons
do_remove_lirc_modules

#Auch alsa sollte beendet werden, 2*
#sudo alsa force-unload
#sudo alsa force-unload
#aber das fuert aber zu Problemen beim Neuladen der Module...
ModulesUnloaded="true"
}

#####
Reload_udev()
{
echo "    udev rules neu einlesen und Treiberreload" >> $SETUPLOG
service udev reload
sleep 2
udevadm trigger
}

#####
Show_Help()
{
HELPFILE="$SETUP_HELP_DIR/$1" 
dialog --textbox $HELPFILE   $DIA_BOX2_SIZE ; clear
}

################ main runs ##############

#####
Install_Driver()
{
Menu

if (( ! $OK_CANCEL )); then
  Run_Selected
fi
}

#####
Get_Setup_Stat()
{
USE_CNF_FILE=$(cat $SETUP_STATUS | grep Vid_In_config        | cut -d" " -f3 )
NON_STD_CARD=$(cat $SETUP_STATUS | grep video_input_hardware | grep STD_DRV_NO | cut -d" " -f3 )
}

#####
Configure_Input()
{
for CNF_FILE in $USE_CNF_FILE  
  do
    [ -f $HW_SETUP_SP/$LIB_NMK_$CNF_FILE ] &&  $HW_SETUP_SP/$LIB_NMK_$CNF_FILE
  done
}

#####
Run_Auto()
{
$DETECT/easyvdr-detect -Vid_In
}

#####
Wait_4_Driver()
{
  {
  i=100
  while (( $i>0 ))
    do
      echo $i; sleep 0.1; i=$(( $i -1 ))
    done
  echo 0;
  } | dialog --backtitle " $BACKTITLE" \
             --gauge "\n\n\
                         Warte 10 Sekunden\n\
                   auf Treiber Initialisierung." $DIA_BOX_SIZE
clear
}

#####
Stop_VDR_Desktop()
{
if (pidof vdr); then
    COUNTD_MESS1="VDR und Desktop"
    COUNTD_MESS2="gestoppt"
    Show_Countdown
    MiniInfo " " "$BACKTITLE" "\n\n\n\Zb\Z1 VDR und Desktop wird gestoppt"
    echo "    VDR und Desktop beenden" >> $SETUPLOG
    Su_Run_q easyvdr-frontend stop
    sleep 1
    Su_Run_q easyvdr-vdr stop
    count=0
    while (pidof vdr) > /dev/null 2>&1
     do
      sleep 0.2
      ((count++))
      (( $count > 25 )) && break
     done
    sleep 2

    Su_Run_q easyvdr-desktop stop
    count=0
    while (check_x_running) > /dev/null 2>&1
     do
      sleep 0.2
      ((count++))
      (( $count > 25 )) && break
     done
    sleep 2

elif (check_x_running); then
    COUNTD_MESS1="Der Desktop"
    COUNTD_MESS2="gestoppt"
    Show_Countdown
    MiniInfo " " "$BACKTITLE" "\n\n\n\Zb\Z1   Desktop wird gestoppt"
    echo "    X-Desktop beenden" >> $SETUPLOG
    Su_Run_q easyvdr-desktop stop
    count=0
    while (check_x_running) > /dev/null 2>&1
     do
      sleep 0.2
      ((count++))
      (( $count > 25 )) && break
     done
    sleep 2

fi
}

#####
Su_Run_q()
{
echo $PASS_WORD | sudo -k -S "$@" > /dev/null 2>&1
}

#####
Show_Countdown()
{
  {
  i=100
  while (( $i>0 ))
    do
      echo $i; sleep 0.05; i=$(( $i -1 ))
    done
  echo 0;
  } | dialog --backtitle " $BACKTITLE" \
             --gauge "    $COUNTD_MESS1 wird in 5 Sekunden\n    $COUNTD_MESS2" $DIA_BOX_SIZE
clear
OK_CANCEL=1
}

############################# main ################################
FORCE_FLAG=$1

ModulesUnloaded="false"
case $FORCE_FLAG in
      -f) echo "    $SETUP/easyvdr-config-video-in wurde manuel gestartet..." >> $SETUPLOG
	  Stop_VDR_Desktop
          Run_Auto
          Get_Setup_Stat
          Install_Driver
          [[ $USE_CNF_FILE != "" ]] && Configure_Input;;
       *) echo "    $SETUP/easyvdr-config-video-in wurde gestartet..." >> $SETUPLOG
	  Stop_VDR_Desktop
          Get_Setup_Stat
          [[ $NON_STD_CARD != "" ]] && Install_Driver
          [[ $USE_CNF_FILE != "" ]] && Configure_Input;;
esac

if [ $ModulesUnloaded == "true" ]; then
    Reload_udev
    Wait_4_Driver
fi
Write_Status

echo "    $SETUP/easyvdr-config-video-in bis zum Ende durchgelaufen." >> $SETUPLOG

