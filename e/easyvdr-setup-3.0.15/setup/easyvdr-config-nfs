#!/bin/bash
# 
# NFSD Konfiguration  fuer easyVDR
#
#
#  v.0.3 added default target host (*) & reload shares in the fly 10.10.11  Captain_Beefheart
#  v.0.4 new defines  		25.01.13   C.B.
#  v.0.5 bugfixes for 3.0	09.04.16   michel8
#  v.0.6 Dialog 		30.04.16   michel8
#
#################################################

################################# defines ##########################################

. /usr/lib/vdr/easyvdr-config-loader
. /usr/lib/vdr/functions/easyvdr-functions-lib
. /usr/share/easyvdr/setup/easyvdr-setup-defines
. /usr/share/easyvdr/setup/easyvdr-setup-functions

TITLE=" Setup fuer easyVDR $EASYVDR_VERSION - NFSD "
BACKTITLE=" NFS-Server Konfiguration "

NFS_EXP="/etc/exports"

MEDI_DIR="/media/easyvdr01"
EXP_AR=\
( $MEDI_DIR/video0 $MEDI_DIR/filme1 $MEDI_DIR/filme2\
  $MEDI_DIR/filme3 $MEDI_DIR/mp3    $MEDI_DIR/photos\
  $MEDI_DIR        / )

TEXT1="###_inserted_by_easyvdr_setup-do_not_edit__###"
TEXT2="###################-begin-####################"
TEXT3="###################--end--####################"
HELP_FILE="$CFG_DIR/plugins/setup/help/nfs_access.hlp"

##################### functions #####################################################

#####
Insert_Skeleton()
{
echo $TEXT1                     >> $NFS_EXP
echo $TEXT2                     >> $NFS_EXP
for ((i=0;i<$Sof_EXP_AR;i++))
  do
    echo "#${EXP_AR[$i]} *(rw)" >> $NFS_EXP
  done
echo $TEXT3                     >> $NFS_EXP
echo $TEXT1                     >> $NFS_EXP
}

#####
Init_Checkbox()
{
[[ x"$START_NFSD" == x"yes" ]] && SWITCH[0]="on" || SWITCH[0]="off"
for ((i=0;i<$Sof_EXP_AR;i++))
  do
    j=$(($i+1))
    (( $(grep -c "#${EXP_AR[$i]} \*(rw" $NFS_EXP) == 0 )) && SWITCH[$j]="on" || SWITCH[$j]="off"	#"
  done
}

#####
NFS_Checkbox()
{
Init_Checkbox
SEL_OPTION=$(dialog\
     --backtitle "$BACKTITLE"\
     --title "$TITLE"\
     --ok-label "weiter"\
     --checklist "\n\
          Auswaehlen mit    [ Space ]  \n\
          Steuerung mit     [  UP   ] [ DOWN ]\n\
          Uebernehmen mit   < weiter >\n\
          Abbruch mit       < Cancel > " $DIA_BOX_SIZE\
      Starte_NFS  "NFSD  starten                      "  "${SWITCH[0]}"\
      Video       "Freigabe: Aufnahmeverzeichniss     "  "${SWITCH[1]}"\
      Filme1      "Freigabe: Filme1                   "  "${SWITCH[2]}"\
      Filme2      "Freigabe: Filme2                   "  "${SWITCH[3]}"\
      Filme3      "Freigabe: Filme3                   "  "${SWITCH[4]}"\
      Musik       "Freigabe: MP3 Verzeichniss         "  "${SWITCH[5]}"\
      Photos      "Freigabe: Bilder Verzeichniss      "  "${SWITCH[6]}"\
      Media       "Freigabe: ganzes Media Verzeichniss"  "${SWITCH[7]}"\
      Root        "Freigabe: ganzes Filesystem        "  "${SWITCH[8]}" 3>&1 1>&2 2>&3 3>&- )
OK_CANCEL=$?
clear
}

#####
Set_New_Stat()
{
N_of_LINES=($Sof_EXP_AR + 1)
for ((i=0;i<$N_of_LINES;i++))
  do
    SEL[$i]="no"
  done
for dummy in $SEL_OPTION
  do
    case $dummy in
    Starte_NFS) SEL[0]="yes";;
         Video) SEL[1]="yes";;
        Filme1) SEL[2]="yes";;
        Filme2) SEL[3]="yes";;
        Filme3) SEL[4]="yes";;
         Musik) SEL[5]="yes";;
        Photos) SEL[6]="yes";;
         Media) SEL[7]="yes";;
          Root) SEL[8]="yes";;
    esac
  done
}

#####
Run_Install()
{
. $SETUP_STATUS
if [[ "$Net_NFS_done" != "true" ]]; then
 echo "" >> $APT_GET_LOG
 echo "===> ########################################################################################" >> $APT_GET_LOG
 echo "===> `date`: Install nfs-kernel-server ..." >> $APT_GET_LOG
 debconf-apt-progress --logfile $APT_GET_LOG -- apt-get --yes install nfs-kernel-server
 AptStatus=$?
 echo "#############################################################################################" >> $APT_GET_LOG
 echo "" >> $APT_GET_LOG
fi

#   Write OSD-Help
echo " "									 > $HELP_FILE
echo "Die folgenden NFS-Freigaben wurden vom Setup im Toolmenu"			>> $HELP_FILE
echo "in die /etc/exports eingetragen."						>> $HELP_FILE
echo "Weitere Eintragungen von Hand sind hier nicht angegeben!"			>> $HELP_FILE
echo " "									>> $HELP_FILE

SetSysconfig START_NFSD ${SEL[0]}
for ((i=0;i<$Sof_EXP_AR;i++))
  do
    j=$(($i+1))
    if [[ ${SEL[$j]} == "yes" ]]
      then 
        Exch "^.*${EXP_AR[$i]} \*(rw.*$" " ${EXP_AR[$i]} \*(rw,no_subtree_check)" "$NFS_EXP"
	echo "     ${EXP_AR[$i]} \*(rw,no_subtree_check)"			>> $HELP_FILE
       else
        Exch "^.*${EXP_AR[$i]} \*(rw.*$" "#${EXP_AR[$i]} \*(rw,no_subtree_check)" "$NFS_EXP"
    fi
  done
$VDR_LIBS/easyvdr-set-settings "nfsd"
[[ ${SEL[0]} == "yes" ]] && exportfs -ra                         # Freigaben neu einlesen
}

#####
Exch()
{
OLDDATA=$1; NEWDATA=$2; TARGETFILE=$3 
sed -i -e "s|$OLDDATA|$NEWDATA|" $TARGETFILE
}

######################################### main ###############################################

Sof_EXP_AR=${#EXP_AR[*]}    # LÃ¤nge des Arrays mit den Verzeichnissen

(( $(grep -c "$TEXT1" $NFS_EXP ) == 0 )) && Insert_Skeleton
NFS_Checkbox
if (( ! $OK_CANCEL )); then
  Set_New_Stat
  Run_Install
fi

