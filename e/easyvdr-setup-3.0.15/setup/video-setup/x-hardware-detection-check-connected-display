#!/bin/bash
#17.10.13  V 0.1 Bleifuss
#20.08.18  V 0.2 Bleifuss

. /usr/lib/vdr/easyvdr-config-loader                   ## common defines
. /usr/lib/vdr/functions/easyvdr-functions-lib         ## common functions
. /usr/share/easyvdr/setup/easyvdr-setup-defines       ## setup only defines
. /usr/share/easyvdr/setup/easyvdr-setup-functions     ## setup only functions
. $SETUP/video-setup/easyvdr-video-lib
CONF_FILE="/etc/vdr/easyvdr/easyvdr-video-settings.conf"
. $CONF_FILE

LOGGER=" logger -t easyvdr-x-hardware-detection-check-connected-display"

MESSAGE_TIME=6

#PRIMARY_DISPLAY=:0

DISPLAY_CONNECTOR1=none
DISPLAY_CONNECTOR2=none
DISPLAY_CONNECTOR3=none

Search_Connector()
{
#### Prüfen ob Anschluss verwendet wird
connected="$1"

if [ "$connected" ] && [ "$connected" != none ];then
 $LOGGER "connected Display on: $(echo $connected)"
 #Ist der erste Anschluss schon verwendet?
 if [ "$DISPLAY_CONNECTOR1" == "none" ];then
   DISPLAY_CONNECTOR1="$connected"
   return
 fi

 #Ist der zweite Anschluss schon verwendet?
 if [ "$DISPLAY_CONNECTOR2" == "none" ];then
   DISPLAY_CONNECTOR2="$connected"
   return
 fi

 #Ist der dritte Anschluss schon verwendet?
 if [ "$DISPLAY_CONNECTOR3" == "none" ];then
   DISPLAY_CONNECTOR3="$connected"
   return
 fi
fi
}



#################### Monitore ermitteln ##############################
/usr/bin/view_picture $SETUP/images/hardware-detection.jpg $MESSAGE_TIME &

#Wird HDMI verwendet?
connected_hdmi="$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f1 | grep -i hdmi | sort -n -) none"

#Wird DVI verwendet?
connected_dvi="$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f1 | grep -i dvi | sort -n -) none"

#Wird Display Port verwendet?
connected_dp="$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f1 | grep -i dp | sort -n -) none"

#Wird VGA verwendet?
connected_vga="$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f1 | grep -i vga | sort -n -) none"

#Für test
#connected_hdmi=" none"
#connected_dvi=" none"
#connected_vga="none"
#connected_dp=" none"

#### HDMI
connected=XXX
i=1
while [ $connected != none ]
do
 connected=$( echo $connected_hdmi | cut -d' ' -f$i )
 Search_Connector $connected
 i=$(($i+1))
done

#### DVI
connected=XXX
i=1
while [ $connected != none ]
do
 connected=$( echo $connected_dvi | cut -d' ' -f$i )
 Search_Connector $connected
 i=$(($i+1))
done

#### Display Port
connected=XXX
i=1
while [ $connected != none ]
do
 connected=$( echo $connected_dp | cut -d' ' -f$i )
 Search_Connector $connected
 i=$(($i+1))
done

#### VGA
connected=XXX
i=1
while [ $connected != none ]
do
 connected=$( echo $connected_vga | cut -d' ' -f$i )
 Search_Connector $connected
 i=$(($i+1))
done

#### Prüfen ob alles passt
count="$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep -c " connected")"
#echo COUN $count
if [ $count -ge 1 ] && [ $DISPLAY_CONNECTOR1 == "none" ];then
 #Unbekanter Anschluss
 #Erster Anschluss übernehmen
 DISPLAY_CONNECTOR1=$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f1)
 $LOGGER "no standard connection"
 $LOGGER "connected Display: $(echo $DISPLAY_CONNECTOR1)"
fi

if [ $count -ge 2 ] && [ $DISPLAY_CONNECTOR2 == "none" ];then
 #Unbekanter Anschluss
 #Anschluss übernehmen
 DISPLAY_CONNECTOR2=$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f2)
 $LOGGER "no standard connection"
 $LOGGER "connected Display: $(echo $DISPLAY_CONNECTOR2)"
fi

if [ $count -ge 3 ] && [ $DISPLAY_CONNECTOR3 == "none" ];then
 #Unbekanter Anschluss
 #Anschluss übernehmen
 DISPLAY_CONNECTOR3=$(DISPLAY=$PRIMARY_DISPLAY xrandr --verbose | grep " connected" | cut -d' ' -f3)
 $LOGGER "no standard connection"
 $LOGGER "connected Display: $(echo $DISPLAY_CONNECTOR3)"
fi

#echo $DISPLAY_CONNECTOR1,
#echo $DISPLAY_CONNECTOR2,
#echo $DISPLAY_CONNECTOR3,


#Gefundene Werte speichern
SetConfFileParameter DISPLAY_CONNECTOR1 $DISPLAY_CONNECTOR1
SetConfFileParameter DISPLAY_CONNECTOR2 $DISPLAY_CONNECTOR2
SetConfFileParameter DISPLAY_CONNECTOR3 $DISPLAY_CONNECTOR3

#Bildschirmnamen und Serien Nr ermitteln und in der conf speichern
Get_Display

sleep $MESSAGE_TIME
touch /tmp/easyvdr_x
exit 0



