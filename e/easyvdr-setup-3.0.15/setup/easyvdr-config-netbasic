#!/bin/bash
#
#
# Grundkonfiguration des Netzwerkes
#
#
# Captain_Beefheart 4 easyVDR  10.10.11 
# fixed nameserver bug  (michel8 )
# removed wrong hostname-function C.B.
# v.0.4  new defines  25.01.13  C.B.  
# v 0.4.1 dns by michel8
# v 0.4.2 samba vorbelegen bei autoinst by michel8 26.5.2014
# v 1.0.0 Use Networkmanager for Networking by michel8 2.3.2016
# v 1.0.1 Interface-Help added by michel8 10.3.2016
# v 1.0.2 Typo, michel8 06.04.2016
# v 1.1.0 As loop with tests, michel8 27.04.2016
# v 1.1.1 Bugfix for 1st setup, michel8 30.04.2016
# v 1.2.0 Network-Help, GB 19.09.2016
##################################

#defines
. /usr/lib/vdr/easyvdr-config-loader
. /usr/lib/vdr/functions/easyvdr-functions-lib
. /usr/share/easyvdr/setup/easyvdr-setup-defines
. /usr/share/easyvdr/setup/easyvdr-setup-functions


VERSION="V1.1"
TITLE=" Setup fuer easyVDR $EASYVDR_VERSION - Netzwerk "
BACKTITLE=" Netzwerk Grundkonfiguration $VERSION" 
HELP_FILE="$CFG_DIR/plugins/setup/help/net_basic.hlp"
HELP_FILE2="$CFG_DIR/plugins/setup/help/svdrp_access.hlp"

SVDRP_CNF="/etc/vdr/svdrphosts.conf"
STRDH_CNF="/etc/vdr/plugins/streamdevhosts.conf"
VNSI_CNF="/etc/vdr/plugins/vnsiserver/allowed_hosts.conf"
XINEL_CNF="/etc/vdr/plugins/xineliboutput/allowed_hosts.conf"
XVDR_CNF="/etc/vdr/plugins/xvdr/allowed_hosts.conf"
EASY_MARK="#inserted by easyvdr"

Ping_HOST="www.google.de"


####### functions #############################

Set_Hostname()
{
MISSING_INPUT=0
while (( $MISSING_INPUT == 0 ))
  do
    HELP_PRESSED="true"
    while [[ $HELP_PRESSED == "true" ]]
      do
        REC_HOSTNAME=$(dialog \
          --backtitle "$BACKTITLE"\
          --extra-button\
          --extra-label " Hilfe "\
          --title " Hostname "\
          --inputbox "\n\n\
           Bitte geben Sie einen Namen fuer Ihren Rechner an. \n\
               Der bisherige ist als default vorgegeben \n \n " \
        $DIA_BOX2_SIZE $HOSTNAME 3>&1 1>&2 2>&3 3>&- )
        OK_CANCEL=$?
        clear

        if (( $OK_CANCEL == 3 ))
          then 
            HELP_PRESSED="true"
            Show_Help "host_help"
          else
            HELP_PRESSED="false"
        fi
      done
     REC_HOSTNAME=$(echo $REC_HOSTNAME | tr -cd '[:alpha:][:digit:]-')
    GOT_NAME=$REC_HOSTNAME
    Check_Missing
  done
((OK_CANCEL==0)) && HOSTNAME="$REC_HOSTNAME"
}

#####
Set_Domain()
{
MISSING_INPUT=0
while (( $MISSING_INPUT == 0 ))
  do
    HELP_PRESSED="true"
    while [[ $HELP_PRESSED == "true" ]]
      do
        REC_DOMAIN=$(dialog \
            --backtitle "$BACKTITLE"\
            --extra-button\
            --extra-label " Hilfe "\
            --title " Domain "\
            --inputbox "\n\n\
             Bitte geben Sie den Namen Ihrer Domain an. \n\
              Der bisherige ist als default vorgegeben \n\
              Achtung, es sollten GROSSBUCHSTABEN sein \n \n " \
        $DIA_BOX2_SIZE $DOMAIN 3>&1 1>&2 2>&3 3>&- )
        OK_CANCEL=$?
        clear

        if (( $OK_CANCEL == 3 ))
          then 
            HELP_PRESSED="true"
            Show_Help "domain_help"
          else
            HELP_PRESSED="false"  
        fi
      done
    GOT_NAME=$REC_DOMAIN
    Check_Missing
  done
((OK_CANCEL==0)) && DOMAIN="$REC_DOMAIN"
}

#####
Select_Interface()
{
DeviceCnt=$(nmcli -t -f DEVICE d  | wc -w)
  if [[ $DeviceCnt == 0 || ($DeviceCnt == 1 && $(nmcli -t -f DEVICE,STATE d | grep -c -E "nicht ver|disconn|unavail") == 1) ]]; then
  #T  if [[ $DeviceCnt != 0 ]]; then
    dialog --backtitle "$BACKTITLE"\
       --title "$TITLE"\
       --defaultno\
       --yes-label " uebernehmen "\
       --no-label " abbrechen "\
       --yesno "\n\n\
       Es wurden keine (aktiven) Ethernet-Interfaces gefunden,\n\
       es werden daher auch keine Parameter fuer\n\
       externe Zugriffe eingestellt !\n\n\
       mit < abbrechen >     (zurueck) zu den Grundeinstellungen \n\
       mit < uebernehmen >   weiter ohne aktives Netzwerkinterface \n\
        " $DIA_BOX2_SIZE
  YES_NO=$?
  ((YES_NO)) && OK_CANCEL=1 || OK_CANCEL=3
  IF_NAME="none"

  elif [[ $DeviceCnt == 1 ]]; then
  #T  elif [[ $DeviceCnt == 1 && $(nmcli -t -f DEVICE,STATE d | grep -c -E "nicht ver|disconn|unavail") == 1 ]]; then
    IF_NAME="all"
    All_IF_Dev=$(nmcli -t -f DEVICE d)
  else
    All_IF_Dev=$(nmcli -t -f DEVICE d)
    unset All_IF_Devices
    i=0
    All_IF_Devices[$i]="all" ;((i++))
    All_IF_Devices[$i]="Zugriffe ueber alle Interfaces zulassen"; ((i++))
    for dev in $All_IF_Dev; do
      All_IF_Devices[$i]=$dev; ((i++))
      All_IF_Devices[$i]="IPv4=$(ifconfig | grep -A1 $dev | grep -E "inet Adr|inet addr" | cut -d: -f2 | cut -d" " -f1), $(nmcli -t -f DEVICE,TYPE d | grep $dev | cut -d":" -f2) ($(nmcli -t -f DEVICE,STATE d | grep $dev | cut -d":" -f2))"
      ((i++))
    done
    if [ $(nmcli -t -f DEVICE,STATE d | grep -c -E "nicht ver|disconn|unavail") != 0 ]; then
      All_IF_Devices[$i]="all_connected" ;((i++))
      All_IF_Devices[$i]="Zugriffe ueber alle verbundenen Interfaces zulassen"; ((i++))
    fi
    OK_CANCEL=0
    while [[ $OK_CANCEL == 0 ]]  ; do
      IF_NAME=$(dialog --title " $TITLE" \
		   --backtitle " $BACKTITLE" \
        	   --cancel-label " Abbrechen " \
        	   --extra-button\
        	   --default-button extra \
		   --extra-label " Auswahl einstellen " \
		   --ok-label " Hilfe " \
		   --menu  "\n \
	Welche der unten genannten Schnittstellen dieses VDR soll fuer \n \
	Streamdev, Svdrp und weitere Services freigegeben werden ? \n   " $DIA_BOX_SIZE \
	"${All_IF_Devices[@]}" 3>&1 1>&2 2>&3 3>&- )      # Index und Name im Menu
      OK_CANCEL=$?
      if (( $OK_CANCEL == 0 )); then 
        Show_Help2
      fi
    done
  fi
  if [[ $IF_NAME == "none" ]]; then
      IF_IPv4="127.0.0.1"
      IF_Mask="255.0.0.0"
  else
    if [[ $IF_NAME == "all" ]]; then
	IF_NAME="all: $All_IF_Dev"
    elif [[ $IF_NAME == "all_connected" ]]; then
	IF_NAME="all: $(nmcli -t -f DEVICE,STATE d | grep -v -E "nicht ver|disconn|unavail" | cut -d: -f1)"
    else
	IF_NAME="one: $IF_NAME"
    fi
    IF_NAME_TMP=$(echo $IF_NAME | cut -d" " -f2)
    IF_IPv4=$(ifconfig | grep -A1 $IF_NAME_TMP | grep -E "inet Adr|inet addr" | cut -d: -f2 | cut -d" " -f1)
    IF_Mask=$(ifconfig | grep -A1 $IF_NAME_TMP | grep -E "inet Adr|inet addr" | awk -F: {'print $NF'})
  fi
}

#####
Configure_Hosts()
{
OK_CANCEL=1
SEL_HOSTS=$(dialog\
    --backtitle "$BACKTITLE"\
    --title " $TITLE "\
    --colors\
    --cancel-label " Abbrechen " \
    --menu "\n\
    Welche Computer sollen auf den Streamingserver, vnsi \n
    und weitere Service dieses VDR zugreifen koennen ?\n\n\
    Auswahl des Netzzugriffs\n\
    Auswahl mit      < up > / < down > \n\
    Einstellen  mit  <  OK >  oder < Abbrechen >"  $DIA_BOX_SIZE\
    "1" "alle Computer im lokalen Netzwerk"\
    "2" "kein, oder nur ein einzelner Computer"\
    "3" "alle Computer - auch aus dem Internet - \Z2\Zb!!VORSICHT!!\Zn "\
  3>&1 1>&2 2>&3 3>&- )
OK_CANCEL=$?

if (($OK_CANCEL == 0)); then
  case $SEL_HOSTS in
     2) LocalNet=$(dialog\
            --backtitle "$BACKTITLE"\
            --title " $TITLE "\
	    --cancel-label " Abbrechen " \
            --inputbox "\n\
	IP des Computers eingeben, der Zugriff erhalten soll. \n\n\
	Oder z.B. mit $LocalNet das ganze lokale Subnetz an \"$(echo $IF_NAME | cut -d" " -f2)\".\n\
	Keine Eingabe erlaubt keinem Computer den Zugriff...\n\n\
	    "\
            $DIA_BOX2_SIZE 3>&1 1>&2 2>&3 3>&- )
        (($?==1)) && OK_CANCEL=1 ;;
     3) LocalNet=0.0.0.0/0;;
  esac
  clear
fi
return $OK_CANCEL
}

######
AskSetAccess()
{
if [[ $(echo $IF_NAME | cut -d: -f1) == "one" ]]; then
  NetLocalIPv4_Addr_Set=$IF_IPv4
  InfoText_0000=" "
else
  NetLocalIPv4_Addr_Set="0.0.0.0"
  InfoText_0000="(\"0.0.0.0\" erlaubt Zugriff ueber alle Interfaces des VDR)"
fi
if [[ $IF_NAME == "none" ]]; then
  LocalNet=" "
else
  LocalNet=$(ipcalc -b $IF_IPv4/$IF_Mask | grep Network | cut -d: -f2 | sed 's/ //g')
  Configure_Hosts
  (($? == 0)) && OK_CANCEL=3
fi
}

######
Show_Box()
{
PLUG_CNF=" "
if [ -f $VNSI_CNF ]; then
    PLUG_CNF=" \n       $VNSI_CNF "$PLUG_CNF
fi
if [ -f $XINEL_CNF ]; then
    PLUG_CNF=" \n       $XINEL_CNF "$PLUG_CNF
fi
if [ -f $XVDR_CNF ]; then
    PLUG_CNF=" \n       $XVDR_CNF "$PLUG_CNF
fi
if [[ $LocalNet == " " || $LocalNet == "" ]]; then
    AddText=" # also keine Freigabe :)"
else
    AddText=""
fi
dialog --backtitle "$BACKTITLE"\
       --title " $TITLE "\
       --msgbox "\n\
    Die Netzwerkeinstellungen wurden uebernommen.\n\n\
    Folgende Freigabe wurde zudem in diese Configfiles geschrieben:\n\
       $SVDRP_CNF \n\
       $STRDH_CNF $PLUG_CNF \n\
    ==> \"$LocalNet\" $AddText\n\n\
    In der $CFG_DIR/setup.conf werden folgende Eintraege\n
    gesetzt:\n\
    ==> streamdev-server.HTTPBindIP = \"$NetLocalIPv4_Addr_Set\"\n\
    ==> streamdev-server.VTBBindIP  = \"$NetLocalIPv4_Addr_Set\"\n\
    $InfoText_0000 "\
    $DIA_BOX2_SIZE

}

#####
Start_NM()
{
    sudo rm -f /tmp/NetworkmananagerFinished
    # Schreibe Startscript in /tmp
    echo "#!/bin/bash"                                                                    > /tmp/StartNetworkManager
    echo "#"                                                                             >> /tmp/StartNetworkManager
    echo ". /usr/share/easyvdr/setup/easyvdr-setup-defines"                              >> /tmp/StartNetworkManager
    echo "sleep 1"                                                                       >> /tmp/StartNetworkManager
    echo "DISPLAY=$FRONTEND_DISPLAY /usr/share/easyvdr/setup/easyvdr-help-network &"     >> /tmp/StartNetworkManager
    echo "DISPLAY=$FRONTEND_DISPLAY /usr/bin/nm-connection-editor  >/dev/null 2>&1"      >> /tmp/StartNetworkManager
    echo "clear   # Bildschirm aufraeumen"                                               >> /tmp/StartNetworkManager
    echo "touch /tmp/NetworkmananagerFinished ; chmod 777 /tmp/NetworkmananagerFinished" >> /tmp/StartNetworkManager
    chmod 755 /tmp/StartNetworkManager

    VT_KONSOLE=$(fgconsole)         ## aktuell aktives Terminal merken
    if ( check_x_running ) >/dev/null 2>&1 ; then
      easyvdr-desktop stop >/dev/null 2>&1 ; sleep 2
    fi
    echo "Bitte warten!, Starte den Network-Manager ... "
    sleep 2
    # su $PULSEAUDIO_USER -c "/usr/bin/xinit /usr/bin/metacity   -- $FRONTEND_DISPLAY vt7 >/dev/null 2>&1" &
    rm_xauthority
    easyvdr-desktop start
    sleep 2
    DISPLAY=$FRONTEND_DISPLAY /tmp/StartNetworkManager &
    sleep 1
    echo ""
    echo "Der Networkmanager ist jetzt auf Konsole 7 direkt am VDR zu sehen ..."
    echo "Abbruch mit beliebiger Taste"
    ReadKey=""; Wartezeit=2
    while [[ ! -f /tmp/NetworkmananagerFinished && "$ReadKey" == "" ]]  ; do
      read -t $Wartezeit -N 1 -s ReadKey
    done
    easyvdr-desktop stop
    rm_xauthority
    sudo rm -f /tmp/NetworkmananagerFinished
    chvt $VT_KONSOLE
    Test_Ping quiet
}

#####
Test_Ping()
{
PingInfo=$1
i=1
while ( ! ping -w 1 $Ping_HOST > /dev/null 2>&1 ); do
    sleep 1
    (($i == 4)) && break   # Abbruch nach max. 50 Sekunden
    ((++i))
done

if (! ping -w 1 $Ping_HOST > /dev/null 2>&1 ) ; then
    PingSuccess="war nicht erfolgreich"
else
    PingSuccess="war erfolgreich"
fi

if [[ "$PingInfo" != "quiet" ]]; then
  dialog --backtitle "$BACKTITLE"\
       --title " $TITLE "\
       --msgbox "\n\n\
    Die Netzwerkeinstellungen wurden mit \n\
    einem Ping auf $Ping_HOST ueberprueft...\n\n\
    ...die Ping-Anfrage $PingSuccess! "\
    $DIA_BOX4_SIZE
fi
PingSuccess="($PingSuccess)"
}

#####
Main_Menu()
{
OK_CANCEL=0
while (( $OK_CANCEL == 0 ))
do
  SET_MENUITEM=$(dialog \
        --backtitle "$BACKTITLE"\
        --title "$TITLE"\
        --cancel-label " Abbrechen " \
        --extra-button\
        --extra-label " Weiter "\
        --menu "\n\n\
      Steuerung mit:                        [   UP   ] [ DOWN ] \n\
      Zum Starten der markierten Auswahl:              < OK > \n\
      Zum Uebernehmen der Parameter aus diesem Menu:   < Weiter > \n\
      Netzwerksetup ohne Aenderungen am VDR beenden:   < Abbrechen > \n\n"  $DIA_BOX_SIZE\
    NetworkManager     "Setze die IP-Parameter mit dem Ubuntu NetworkManager" \
    Hostname           "Setzt den Name Ihres VDR im Netzwerk"                 \
    Domain             "Setzt die Domain, der Ihr VDR angehoert"              \
    TestInetAccess     "Ping-Test auf $Ping_HOST $PingSuccess"      3>&1 1>&2 2>&3 3>&- )
  OK_CANCEL=$?
  clear

  if (( $OK_CANCEL == 0 )); then
    case $SET_MENUITEM in
    NetworkManager) Start_NM;;
          Hostname) Set_Hostname;;
            Domain) Set_Domain;;
    TestInetAccess) Test_Ping;;
    esac
    OK_CANCEL=0
  elif (( $OK_CANCEL == 1 )); then
    WORGING_DONE="done"
  fi
done
}

#####
Write_OSD_Help()
{
All_IF_Dev=$(nmcli -t -f DEVICE d)
echo " "								 > $HELP_FILE
echo "Die Netzwerkeinstellungen erfordern den Ubuntu Netzwerkmanager. "	>> $HELP_FILE
echo "Damit wurden im Setup vom Toolmenu LAN & WLAN Schnittstelle(n) "	>> $HELP_FILE
echo "eingestellt. "							>> $HELP_FILE
echo " "								>> $HELP_FILE
echo "Von den vorhandenen aktiven Interfaces des VDR: "			>> $HELP_FILE
echo "   $All_IF_Dev "							>> $HELP_FILE
echo "wurde(n) ueber "							>> $HELP_FILE
echo "   $IF_NAME "							>> $HELP_FILE
echo "der Zugriff auf interne Services wie svdrp, stremdev, etc. "	>> $HELP_FILE
echo "als Freigabe in die entsprechenden Configfiles eingetragen. "	>> $HELP_FILE
echo " "								>> $HELP_FILE
echo " "								>> $HELP_FILE
echo "Werden die Grundeinstellungen fuer das Netzwerk anders als ueber"	>> $HELP_FILE
echo "das Setup aus dem Toolmenue veraendert, werden moeglicherweise"	>> $HELP_FILE
echo "nicht alle diese abhaengigen Einstellungen mit angepasst! "	>> $HELP_FILE
echo " "								>> $HELP_FILE

###
PLUG_CNF_=$(echo $PLUG_CNF | sed 's/\\n/\n  /g')
echo " "								 > $HELP_FILE2
echo "Die Netzwerkeinstellungen erfordern den Ubuntu Netzwerkmanager. "	>> $HELP_FILE2
echo "Damit wurden im Setup vom Toolmenu LAN & WLAN Schnittstelle(n) "	>> $HELP_FILE2
echo "eingestellt und fuer Streamdev und andere Services damit auch"	>> $HELP_FILE2
echo "die folgende Freigabe in diese Configfiles geschrieben: "		>> $HELP_FILE2
echo " " 								>> $HELP_FILE2
echo "   $SVDRP_CNF  " 							>> $HELP_FILE2
echo "   $STRDH_CNF $PLUG_CNF_ " 					>> $HELP_FILE2
echo " " 								>> $HELP_FILE2
echo "==> \"$LocalNet\" "						>> $HELP_FILE2
echo " " 								>> $HELP_FILE2
echo "In der $CFG_DIR/setup.conf wurden zudem folgende Eintraege " 	>> $HELP_FILE2
echo "gesetzt: " 							>> $HELP_FILE2
echo " " 								>> $HELP_FILE2
echo "==> streamdev-server.HTTPBindIP = \"$NetLocalIPv4_Addr_Set\" " 	>> $HELP_FILE2
echo "==> streamdev-server.VTBBindIP  = \"$NetLocalIPv4_Addr_Set\" " 	>> $HELP_FILE2
echo "$InfoText_0000 "							>> $HELP_FILE2
}

#####
Run_Install()
{
SetSysconfig HOSTNAME $REC_HOSTNAME
SetSysconfig DOMAIN $REC_DOMAIN
SetSysconfig NetLocalInterface $IF_NAME
SetSysconfig NetLocalIPv4_Addr $IF_IPv4
SetSysconfig NetLocalIPv4_Mask $IF_Mask

SetSetupConf streamdev-server.HTTPBindIP  $NetLocalIPv4_Addr_Set
SetSetupConf streamdev-server.VTPBindIP   $NetLocalIPv4_Addr_Set

sed -i '/'"$EASY_MARK"'/d' $SVDRP_CNF; echo "$LocalNet  $EASY_MARK" >> $SVDRP_CNF
sed -i '/'"$EASY_MARK"'/d' $STRDH_CNF; echo "$LocalNet  $EASY_MARK" >> $STRDH_CNF
if [ -f $VNSI_CNF ]; then
    sed -i '/'"$EASY_MARK"'/d' $VNSI_CNF; echo "$LocalNet  $EASY_MARK" >> $VNSI_CNF
fi
if [ -f $XINEL_CNF ]; then
    sed -i '/'"$EASY_MARK"'/d' $XINEL_CNF; echo "$LocalNet  $EASY_MARK" >> $XINEL_CNF
fi
if [ -f $XVDR_CNF ]; then
    sed -i '/'"$EASY_MARK"'/d' $XVDR_CNF; echo "$LocalNet  $EASY_MARK" >> $XVDR_CNF
fi

$VDR_LIBS/easyvdr-set-settings "network_ng"
(pidof smbd > /dev/null 2>&1) && $VDR_LIBS/easyvdr-set-settings "samba" # wenn samba lauft muss der ggf. neue Name uebernommen werden

clear
}


####################### helper ######################################

#####
Check_Missing()
{
if [[ (! "$GOT_NAME") && ($OK_CANCEL == 0) ]]
  then
    dialog --title " Error:  fehlende Eingabe "\
           --backtitle "$BACKTITLE"\
           --colors\
           --pause "\n\n\
        \Z1\Zb !! ERROR !!\n\
        fehlende Eingabe!" $DIA_BOX3_SIZE $TIMEOUT
    MISSING_INPUT=0
  else 
    MISSING_INPUT=1
fi
}

#####
Show_Help()
{
HELP=$1
HELPFILE="$SETUP_HELP_DIR/$HELP" 
dialog --textbox $HELPFILE   $DIA_BOX2_SIZE ; clear
}

#####
Show_Help2()
{
nm-tool > /tmp/nmstat.hlp
HELPFILE="/tmp/nmstat.hlp"
dialog --textbox $HELPFILE   $DIA_BOX2_SIZE ; clear
}

################### main ###########################
RUN_OPTION=$1

WORGING_DONE="working"

# Vorbelegen der Auswahl fuer Domain und Hostname
. $CFG_DIR/sysconfig
REC_HOSTNAME="$HOSTNAME"
REC_DOMAIN="$DOMAIN"

while [[ $WORGING_DONE != "done" ]]; do
    if [[ $RUN_OPTION == "all" ]]; then
      Main_Menu
    else
      # Uebernehme bei der Erstconfig die Daten von NM aus Install mit default Hostname und Domain
      OK_CANCEL=3
      RUN_OPTION="all"
    fi
    if (( $OK_CANCEL == 3 )); then
      Select_Interface
    fi
    if (( $OK_CANCEL == 3 )); then
      AskSetAccess
    fi
    if (( $OK_CANCEL == 3 )); then
      # Uebernehme die eingestellten Daten von NM incl. Hostname und Domain
      Run_Install
      Show_Box
      Write_OSD_Help
      WORGING_DONE="done"
    fi
done
